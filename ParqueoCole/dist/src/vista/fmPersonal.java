/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static logica.FechaHora.fecha;
import static logica.FechaHora.hora;
import modelo.Conexion;
import modelo.ConsultasPE;
import modelo.espacio;
import modelo.personal;

/**
 *
 * @author maula
 */
public class fmPersonal extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmParqueo
     */
    espacio mod = new espacio();
    ConsultasPE pe = new ConsultasPE();
    personal mod1 = new personal();
    DefaultTableModel m4 = new DefaultTableModel();

    public fmPersonal() {
        initComponents();
        setTitle("Personal");

        mod.setFecha(fecha());
        this.Datos.setModel(m4);
        this.m4.addColumn("Cedula");
        this.m4.addColumn("Nombre");
        this.m4.addColumn("Apellido1");
        this.m4.addColumn("Apellido2");
        this.m4.addColumn("Placa");

        try {
            Datos.setModel(m4);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT cedula,nombre,apellido1,apellido2,placa FROM tb_personal";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m4.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }

        txtCedula.setEnabled(false);
        txtNombre.setEnabled(false);
        txtApellido1.setEnabled(false);
        txtApellido2.setEnabled(false);
        txtPlaca.setEnabled(false);
        btnIngresar.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuTabla = new javax.swing.JPopupMenu();
        btnModificar1 = new javax.swing.JMenuItem();
        btnEliminar1 = new javax.swing.JMenuItem();
        btnBuscar1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnIngresar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnCargar = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtApellido2 = new javax.swing.JTextField();
        txtPlaca = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Datos = new javax.swing.JTable();
        txtApellido1 = new javax.swing.JTextField();

        btnModificar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnModificar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificar32.png"))); // NOI18N
        btnModificar1.setText("Modificar");
        btnModificar1.setToolTipText("");
        btnModificar1.setContentAreaFilled(false);
        btnModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnModificar1);

        btnEliminar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnEliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar32.png"))); // NOI18N
        btnEliminar1.setText("Eliminar");
        btnEliminar1.setBorderPainted(true);
        btnEliminar1.setContentAreaFilled(false);
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnEliminar1);

        btnBuscar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar32.png"))); // NOI18N
        btnBuscar1.setText("Buscar");
        btnBuscar1.setBorderPainted(true);
        btnBuscar1.setContentAreaFilled(false);
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnBuscar1);

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pe.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(18, 110, 130));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/personal.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel2)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtCedula.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtCedula.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Cedula", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtCedula.setFocusTraversalPolicyProvider(true);
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCedulaKeyPressed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnIngresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entrada.png"))); // NOI18N
        btnIngresar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ingresar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnIngresar.setContentAreaFilled(false);
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agregar.png"))); // NOI18N
        btnNuevo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nuevo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnCargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salida.png"))); // NOI18N
        btnCargar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cargar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnCargar.setContentAreaFilled(false);
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(btnNuevo)
                .addGap(71, 71, 71)
                .addComponent(btnIngresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCargar)
                .addGap(87, 87, 87))
        );

        txtNombre.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtNombre.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Nombre", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        txtApellido2.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtApellido2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Apellido2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtApellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido2KeyPressed(evt);
            }
        });

        txtPlaca.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtPlaca.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Placa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlacaKeyPressed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Datos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Datos.setComponentPopupMenu(MenuTabla);
        Datos.setSelectionBackground(new java.awt.Color(81, 196, 211));
        Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Datos);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        txtApellido1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtApellido1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Apellido1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(117, 117, 117)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DatosMouseClicked
        txtApellido2.setEnabled(true);
        txtNombre.setEnabled(true);
        txtPlaca.setEnabled(true);
        txtApellido1.setEnabled(true);
        txtApellido2.setEnabled(true);
        btnModificar1.setEnabled(true);
        btnEliminar1.setEnabled(true);

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT cedula,nombre,apellido1,apellido2,placa FROM tb_personal WHERE cedula=?");
            ps.setInt(1, Integer.parseInt(codigo));
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCedula.setText(rs.getString("cedula"));
                txtNombre.setText(rs.getString("nombre"));
                txtApellido1.setText(rs.getString("apellido1"));
                txtApellido2.setText(rs.getString("apellido2"));
                txtPlaca.setText(rs.getString("placa"));

            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        txtApellido2.setEnabled(true);
        txtNombre.setEnabled(true);
        txtPlaca.setEnabled(true);
        txtCedula.setEnabled(true);
        txtApellido1.setEnabled(true);
        txtApellido2.setEnabled(true);
        btnIngresar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        mod1.setCedula(Integer.parseInt(txtCedula.getText()));
        mod1.setNombre(txtNombre.getText());
        mod1.setApellido1(txtApellido1.getText());
        mod1.setApellido2(txtApellido2.getText());
        mod1.setPlaca(txtPlaca.getText());

        if (pe.ingresar(mod1)) {
            JOptionPane.showMessageDialog(null, "Ingresado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al ingresar");
            limpiar();
        }

        txtCedula.setEnabled(false);
        txtNombre.setEnabled(false);
        txtApellido1.setEnabled(false);
        txtApellido2.setEnabled(false);
        txtPlaca.setEnabled(false);
        btnIngresar.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificar1ActionPerformed
        int Fila = Datos.getSelectedRow();

        mod1.setCedula(Integer.parseInt(txtCedula.getText()));
        mod1.setNombre(txtNombre.getText());
        mod1.setApellido1(txtApellido1.getText());
        mod1.setApellido2(txtApellido2.getText());
        mod1.setPlaca(txtPlaca.getText());

        if (pe.modificar(mod1)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        Datos.setValueAt(txtCedula.getText(), Fila, 0);
        Datos.setValueAt(txtNombre.getText(), Fila, 1);
        Datos.setValueAt(txtApellido1.getText(), Fila, 2);
        Datos.setValueAt(txtApellido2.getText(), Fila, 3);
        Datos.setValueAt(txtPlaca.getText(), Fila, 4);

        txtCedula.setEnabled(false);
        txtNombre.setEnabled(false);
        txtApellido1.setEnabled(false);
        txtApellido2.setEnabled(false);
        txtPlaca.setEnabled(false);
        btnIngresar.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }//GEN-LAST:event_btnModificar1ActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
        int Fila = Datos.getSelectedRow();

        mod1.setCedula(Integer.parseInt(txtCedula.getText()));

        if (pe.eliminar(mod1)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        m4.removeRow(Fila);

        txtCedula.setEnabled(false);
        txtNombre.setEnabled(false);
        txtApellido1.setEnabled(false);
        txtApellido2.setEnabled(false);
        txtPlaca.setEnabled(false);
        btnIngresar.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        Object bus = JOptionPane.showInputDialog(null, "Seleccione una Opcion", "Buscar", JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Seleccione", "Cedula", "Placa", "Nombre"}, "Seleccione");

        if (bus == "Cedula") {

            String ced = JOptionPane.showInputDialog("Ingrese el numero de cedula: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,placa FROM tb_personal WHERE cedula='" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Placa") {

            String ced = JOptionPane.showInputDialog("Ingrese la placa: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,placa FROM tb_personal WHERE placa='" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Nombre") {

            String ced1 = JOptionPane.showInputDialog("Ingrese el nombre: ");
            String ced2 = JOptionPane.showInputDialog("Ingrese el primer apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,placa FROM tb_personal WHERE nombre='" + ced1 + "' AND apellido1='" + ced2 + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        int fila = Datos.getRowCount();

        for (int i = fila - 1; i >= 0; i--) {
            m4.removeRow(i);
        }

        try {
            Datos.setModel(m4);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT cedula,nombre,apellido1,apellido2,placa FROM tb_personal";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m4.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnCargarActionPerformed

    private void txtCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyPressed
        if (evt.getKeyCode() == 40) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod1.setCedula(Integer.parseInt(txtCedula.getText()));
            mod1.setNombre(txtNombre.getText());
            mod1.setApellido1(txtApellido1.getText());
            mod1.setApellido2(txtApellido2.getText());
            mod1.setPlaca(txtPlaca.getText());

            if (pe.ingresar(mod1)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtNombre.setEnabled(false);
            txtApellido1.setEnabled(false);
            txtApellido2.setEnabled(false);
            txtPlaca.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnModificar1.setEnabled(false);
            btnEliminar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtCedulaKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        if (evt.getKeyCode() == 40) {
            txtApellido1.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtCedula.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod1.setCedula(Integer.parseInt(txtCedula.getText()));
            mod1.setNombre(txtNombre.getText());
            mod1.setApellido1(txtApellido1.getText());
            mod1.setApellido2(txtApellido2.getText());
            mod1.setPlaca(txtPlaca.getText());

            if (pe.ingresar(mod1)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtNombre.setEnabled(false);
            txtApellido1.setEnabled(false);
            txtApellido2.setEnabled(false);
            txtPlaca.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnModificar1.setEnabled(false);
            btnEliminar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtApellido1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido1KeyPressed
        if (evt.getKeyCode() == 40) {
            txtApellido2.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod1.setCedula(Integer.parseInt(txtCedula.getText()));
            mod1.setNombre(txtNombre.getText());
            mod1.setApellido1(txtApellido1.getText());
            mod1.setApellido2(txtApellido2.getText());
            mod1.setPlaca(txtPlaca.getText());

            if (pe.ingresar(mod1)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtNombre.setEnabled(false);
            txtApellido1.setEnabled(false);
            txtApellido2.setEnabled(false);
            txtPlaca.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnModificar1.setEnabled(false);
            btnEliminar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido1KeyPressed

    private void txtApellido2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido2KeyPressed
        if (evt.getKeyCode() == 40) {
            txtPlaca.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido1.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod1.setCedula(Integer.parseInt(txtCedula.getText()));
            mod1.setNombre(txtNombre.getText());
            mod1.setApellido1(txtApellido1.getText());
            mod1.setApellido2(txtApellido2.getText());
            mod1.setPlaca(txtPlaca.getText());

            if (pe.ingresar(mod1)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtNombre.setEnabled(false);
            txtApellido1.setEnabled(false);
            txtApellido2.setEnabled(false);
            txtPlaca.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnModificar1.setEnabled(false);
            btnEliminar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido2KeyPressed

    private void txtPlacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyPressed
        if (evt.getKeyCode() == 38) {
            txtApellido2.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod1.setCedula(Integer.parseInt(txtCedula.getText()));
            mod1.setNombre(txtNombre.getText());
            mod1.setApellido1(txtApellido1.getText());
            mod1.setApellido2(txtApellido2.getText());
            mod1.setPlaca(txtPlaca.getText());

            if (pe.ingresar(mod1)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtNombre.setEnabled(false);
            txtApellido1.setEnabled(false);
            txtApellido2.setEnabled(false);
            txtPlaca.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnModificar1.setEnabled(false);
            btnEliminar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtPlacaKeyPressed

    public void limpiar() {
        txtCedula.setText(null);
        txtNombre.setText(null);
        txtApellido1.setText(null);
        txtApellido2.setText(null);
        txtPlaca.setText(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Datos;
    private javax.swing.JPopupMenu MenuTabla;
    private javax.swing.JMenuItem btnBuscar1;
    private javax.swing.JButton btnCargar;
    private javax.swing.JMenuItem btnEliminar1;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JMenuItem btnModificar1;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApellido1;
    private javax.swing.JTextField txtApellido2;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPlaca;
    // End of variables declaration//GEN-END:variables
}
