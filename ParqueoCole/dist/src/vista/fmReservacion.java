/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static logica.FechaHora.fecha;
import static logica.FechaHora.hora;
import modelo.Conexion;
import modelo.ConsultasAD;
import modelo.ConsultasAS;
import modelo.ConsultasRE;
import modelo.ConsultasRE2;
import modelo.administrativos;
import modelo.asignar;
import modelo.espacio;
import modelo.registro;
import modelo.reservar;

/**
 *
 * @author maula
 */
public class fmReservacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmParqueo
     */
    espacio mod = new espacio();
    ConsultasAS as = new ConsultasAS();
    asignar mod1 = new asignar();
    administrativos mod2 = new administrativos();
    ConsultasAD re = new ConsultasAD();
    DefaultTableModel m4 = new DefaultTableModel();
    reservar mod3 = new reservar();
    ConsultasRE2 re2 = new ConsultasRE2();

    public fmReservacion() {
        initComponents();
        setTitle("Reservacion");

        mod.setFecha(fecha());
        this.Datos.setModel(m4);
        this.m4.addColumn("Nombre");
        this.m4.addColumn("Apellido1");
        this.m4.addColumn("Cedula");
        this.m4.addColumn("Espacio");

        try {
            Datos.setModel(m4);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT p.nombre, p.apellido1, r.cedul, r.espacio FROM tb_reserva AS r INNER JOIN tb_personal AS p ON r.cedul=p.cedula";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m4.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }

        txtCedula.setEnabled(false);
        txtEspacio.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnEntrada.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuTabla = new javax.swing.JPopupMenu();
        btnModificar1 = new javax.swing.JMenuItem();
        btnBuscar1 = new javax.swing.JMenuItem();
        btnEliminar1 = new javax.swing.JMenuItem();
        grupoPersonal = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Datos = new javax.swing.JTable();
        txtEspacio = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEntrada = new javax.swing.JButton();
        rbnAdm = new javax.swing.JRadioButton();
        rbnDoc = new javax.swing.JRadioButton();

        btnModificar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnModificar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificar32.png"))); // NOI18N
        btnModificar1.setText("Modificar");
        btnModificar1.setToolTipText("");
        btnModificar1.setContentAreaFilled(false);
        btnModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnModificar1);

        btnBuscar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar32.png"))); // NOI18N
        btnBuscar1.setText("Buscar");
        btnBuscar1.setBorderPainted(true);
        btnBuscar1.setContentAreaFilled(false);
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnBuscar1);

        btnEliminar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnEliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar32.png"))); // NOI18N
        btnEliminar1.setText("Eliminar");
        btnEliminar1.setBorderPainted(true);
        btnEliminar1.setContentAreaFilled(false);
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnEliminar1);

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reserva32.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(18, 110, 130));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reserva.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel2)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtCedula.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtCedula.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Cedula", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtCedula.setFocusTraversalPolicyProvider(true);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        Datos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Datos.setComponentPopupMenu(MenuTabla);
        Datos.setSelectionBackground(new java.awt.Color(81, 196, 211));
        Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Datos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        txtEspacio.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtEspacio.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Espacio", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agregar.png"))); // NOI18N
        btnNuevo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nuevo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entrada.png"))); // NOI18N
        btnAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salida.png"))); // NOI18N
        btnEntrada.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Entrada", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnEntrada.setContentAreaFilled(false);
        btnEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(btnEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEntrada)
                    .addComponent(btnAgregar)
                    .addComponent(btnNuevo))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        rbnAdm.setBackground(new java.awt.Color(255, 255, 255));
        grupoPersonal.add(rbnAdm);
        rbnAdm.setText("Administrativos");

        rbnDoc.setBackground(new java.awt.Color(255, 255, 255));
        grupoPersonal.add(rbnDoc);
        rbnDoc.setText("Docentes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(txtEspacio, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbnDoc)
                            .addComponent(rbnAdm))
                        .addGap(27, 27, 27)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEspacio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(rbnAdm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbnDoc)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DatosMouseClicked
        btnModificar1.setEnabled(true);
        txtCedula.setEnabled(true);
        txtEspacio.setEnabled(true);
        btnEliminar1.setEnabled(true);
        btnEntrada.setEnabled(true);

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 3).toString();

            ps = conn.prepareStatement("SELECT cedul,espacio FROM tb_reserva WHERE espacio=?");
            ps.setInt(1, Integer.parseInt(codigo));
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCedula.setText(rs.getString("cedul"));
                txtEspacio.setText(rs.getString("espacio"));

            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        txtCedula.setEnabled(true);
        txtEspacio.setEnabled(true);
        btnAgregar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        mod3.setCedula(Integer.parseInt(txtCedula.getText()));
        mod3.setEspacio(Integer.parseInt(txtEspacio.getText()));

        if (re2.ingresar(mod3)) {
            JOptionPane.showMessageDialog(null, "Ingresado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al ingresar");
            limpiar();
        }

        txtCedula.setEnabled(false);
        txtEspacio.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnEntrada.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntradaActionPerformed
        mod2.setCedula(Integer.parseInt(txtCedula.getText()));
        mod2.setEspacio(Integer.parseInt(txtEspacio.getText()));
        mod2.setHoraE(hora());
        mod2.setEstado("Ocupado");
        mod2.setEstado1(1);
        mod1.setCedula(Integer.parseInt(txtCedula.getText()));
        mod1.setEspacio(Integer.parseInt(txtEspacio.getText()));
        mod1.setHoraE(hora());
        mod1.setEstado("Ocupado");
        mod1.setEstado1(1);

        if (rbnAdm.isSelected()) {
            if (re.insetar(mod2)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }
        }
        if (rbnDoc.isSelected()) {
            if (as.insetar(mod1)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }
        }

        txtCedula.setEnabled(false);
        txtEspacio.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnEntrada.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }//GEN-LAST:event_btnEntradaActionPerformed

    private void btnModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificar1ActionPerformed
        mod3.setCedula(Integer.parseInt(txtCedula.getText()));
        mod3.setEspacio(Integer.parseInt(txtEspacio.getText()));

        if (re2.modificar(mod3)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        txtCedula.setEnabled(false);
        txtEspacio.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnEntrada.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }//GEN-LAST:event_btnModificar1ActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        Object bus = JOptionPane.showInputDialog(null, "Seleccione una Opcion", "Buscar", JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Seleccione", "Nombre", "Apellido", "Cedula", "Espacio"}, "Seleccione");

        if (bus == "Nombre") {
            
            String ced = JOptionPane.showInputDialog("Ingrese el nombre: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT p.nombre,p.apellido1,r.cedul,r.espacio FROM tb_reserva AS r INNER JOIN tb_personal AS p ON r.cedul=p.cedula WHERE p.nombre='"+ced+"'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Apellido") {
            
            String ced = JOptionPane.showInputDialog("Ingrese el primer apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT p.nombre,p.apellido1,r.cedul,r.espacio FROM tb_reserva AS r INNER JOIN tb_personal AS p ON r.cedul=p.cedula WHERE p.apellido1='"+ced+"'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if(bus == "Cedula"){
            
            String ced = JOptionPane.showInputDialog("Ingrese el numero de cedula: ");
            
            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT p.nombre,p.apellido1,r.cedul,r.espacio FROM tb_reserva AS r INNER JOIN tb_personal AS p ON r.cedul=p.cedula WHERE r.cedul='"+ced+"'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }else if (bus == "Espacio") {

            String ced = JOptionPane.showInputDialog("Ingrese el espacio: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT p.nombre,p.apellido1,r.cedul,r.espacio FROM tb_reserva AS r INNER JOIN tb_personal AS p ON r.cedul=p.cedula WHERE r.espacio='"+ced+"'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
        int Fila = Datos.getSelectedRow();

        mod1.setCedula(Integer.parseInt(txtCedula.getText()));

        if (re2.eliminar(mod3)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        m4.removeRow(Fila);

        txtCedula.setEnabled(false);
        txtEspacio.setEnabled(false);
        btnEntrada.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    public void limpiar() {
        txtCedula.setText(null);
        txtEspacio.setText(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Datos;
    private javax.swing.JPopupMenu MenuTabla;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JMenuItem btnBuscar1;
    private javax.swing.JMenuItem btnEliminar1;
    private javax.swing.JButton btnEntrada;
    private javax.swing.JMenuItem btnModificar1;
    private javax.swing.JButton btnNuevo;
    private javax.swing.ButtonGroup grupoPersonal;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbnAdm;
    private javax.swing.JRadioButton rbnDoc;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtEspacio;
    // End of variables declaration//GEN-END:variables
}
