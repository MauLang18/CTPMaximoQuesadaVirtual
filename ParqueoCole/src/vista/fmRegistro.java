/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import com.mysql.jdbc.Connection;
import excel.ExcelRE;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static logica.FechaHora.fecha;
import static logica.FechaHora.hora;
import modelo.Conexion;
import modelo.ConsultasRE;
import modelo.espacio;
import modelo.registro;
import pdf.pdfRE;

/**
 *
 * @author maula
 */
public class fmRegistro extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmParqueo
     */
    espacio mod = new espacio();
    registro mod2 = new registro();
    ConsultasRE re = new ConsultasRE();
    DefaultTableModel m4 = new DefaultTableModel();

    public fmRegistro() {
        initComponents();
        setTitle("Registro");

        mod.setFecha(fecha());
        this.Datos.setModel(m4);
        this.m4.addColumn("Codigo");
        this.m4.addColumn("Cedula");
        this.m4.addColumn("Espacio");
        this.m4.addColumn("Fecha");
        this.m4.addColumn("Hora de Entrada");
        this.m4.addColumn("Hora de Salida");

        try {
            Datos.setModel(m4);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT id,cedu,espacio,fecha,horaEntrada,horaSalida FROM tb_registro";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m4.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }

        txtCedula.setEnabled(false);
        txtFecha.setEnabled(false);
        txtEspacio.setEnabled(false);
        txtHoraE.setEnabled(false);
        txtHoraS.setEnabled(false);
        btnIngresar.setEnabled(false);
        btnCargar.setEnabled(false);
        btnModificar1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuTabla = new javax.swing.JPopupMenu();
        btnModificar1 = new javax.swing.JMenuItem();
        btnBuscar1 = new javax.swing.JMenuItem();
        btnEliminar1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnIngresar = new javax.swing.JButton();
        btnCargar = new javax.swing.JButton();
        btnPDF = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnExcel = new javax.swing.JButton();
        txtEspacio = new javax.swing.JTextField();
        txtHoraE = new javax.swing.JTextField();
        txtHoraS = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Datos = new javax.swing.JTable();
        txtFecha = new com.toedter.calendar.JDateChooser();

        btnModificar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnModificar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificar32.png"))); // NOI18N
        btnModificar1.setText("Modificar");
        btnModificar1.setToolTipText("");
        btnModificar1.setContentAreaFilled(false);
        btnModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnModificar1);

        btnBuscar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar32.png"))); // NOI18N
        btnBuscar1.setText("Buscar");
        btnBuscar1.setBorderPainted(true);
        btnBuscar1.setContentAreaFilled(false);
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnBuscar1);

        btnEliminar1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnEliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar32.png"))); // NOI18N
        btnEliminar1.setText("Eliminar");
        btnEliminar1.setBorderPainted(true);
        btnEliminar1.setContentAreaFilled(false);
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });
        MenuTabla.add(btnEliminar1);

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/re.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(18, 110, 130));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Registro.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel2)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtCedula.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtCedula.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Cedula", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtCedula.setFocusTraversalPolicyProvider(true);
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCedulaKeyPressed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agregar.png"))); // NOI18N
        btnNuevo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nuevo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnIngresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entrada.png"))); // NOI18N
        btnIngresar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ingresar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnIngresar.setContentAreaFilled(false);
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnCargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salida.png"))); // NOI18N
        btnCargar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cargar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnCargar.setContentAreaFilled(false);
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/PDF96.png"))); // NOI18N
        btnPDF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PDF", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnPDF.setContentAreaFilled(false);
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });

        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Excel96.png"))); // NOI18N
        btnExcel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Excel", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 24))); // NOI18N
        btnExcel.setContentAreaFilled(false);
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIngresar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCargar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnNuevo)
                .addGap(5, 5, 5)
                .addComponent(btnIngresar)
                .addGap(5, 5, 5)
                .addComponent(btnCargar)
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btnPDF)
                .addGap(5, 5, 5)
                .addComponent(btnExcel)
                .addGap(0, 31, Short.MAX_VALUE))
        );

        txtEspacio.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtEspacio.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Espacio", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtEspacio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEspacioKeyPressed(evt);
            }
        });

        txtHoraE.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtHoraE.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Hora de Entrada", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtHoraE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHoraEKeyPressed(evt);
            }
        });

        txtHoraS.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        txtHoraS.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Hora de Salida", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtHoraS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHoraSKeyPressed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Datos.setComponentPopupMenu(MenuTabla);
        Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DatosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Datos);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        txtFecha.setBackground(new java.awt.Color(255, 255, 255));
        txtFecha.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Fecha", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 24))); // NOI18N
        txtFecha.setDateFormatString("yyyy/MM/dd");
        txtFecha.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(txtHoraE, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(txtHoraS, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEspacio, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEspacio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(117, 117, 117)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHoraE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoraS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        txtCedula.setEnabled(true);
        txtFecha.setEnabled(true);
        txtHoraE.setEnabled(true);
        txtHoraS.setEnabled(true);
        txtEspacio.setEnabled(true);
        btnIngresar.setEnabled(true);
        btnCargar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        int Fila = Datos.getSelectedRow();

        mod2.setCedula(Integer.parseInt(txtCedula.getText()));
        mod2.setEspacio(Integer.parseInt(txtEspacio.getText()));
        mod2.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
        mod2.setHoraE(txtHoraE.getText());
        mod2.setHoraS(txtHoraS.getText());

        if (re.ingresar(mod2)) {
            JOptionPane.showMessageDialog(null, "Ingresado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al ingresar");
            limpiar();
        }

        //Datos.setValueAt(txtEstado.getSelectedItem().toString(), Fila, 1);
        txtCedula.setEnabled(false);
        txtEspacio.setEnabled(false);
        txtHoraE.setEnabled(false);
        txtHoraS.setEnabled(false);
        btnIngresar.setEnabled(false);
        btnCargar.setEnabled(false);
        btnModificar1.setEnabled(false);
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        int fila = Datos.getRowCount();

        for (int i = fila - 1; i >= 0; i--) {
            m4.removeRow(i);
        }

        try {
            Datos.setModel(m4);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT codigo,cedu,espacio,fecha,horaEntrada,horaSalida FROM tb_registro";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m4.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificar1ActionPerformed
        mod2.setCedula(Integer.parseInt(txtCedula.getText()));
        mod2.setEspacio(Integer.parseInt(txtEspacio.getText()));
        mod.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
        mod2.setHoraE(txtHoraE.getText());
        mod2.setHoraS(txtHoraS.getText());

        if (re.modificar(mod2)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        txtCedula.setEnabled(false);
        txtEspacio.setEnabled(false);
        txtHoraE.setEnabled(false);
        txtHoraS.setEnabled(false);
        btnIngresar.setEnabled(false);
        btnCargar.setEnabled(false);
        btnModificar1.setEnabled(false);
    }//GEN-LAST:event_btnModificar1ActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        Object bus = JOptionPane.showInputDialog(null, "Seleccione una Opcion", "Buscar", JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Seleccione", "Cedula", "Fecha", "Hora de Entrada", "Hora de Salida"}, "Seleccione");

        if (bus == "Cedula") {

            String ced = JOptionPane.showInputDialog("Ingrese el numero de cedula: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,cedu,espacio,fecha,horaEntrada,horaSalida FROM tb_registro WHERE cedu='" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Fecha") {

            String ced = JOptionPane.showInputDialog("Ingrese la fecha con el siguiente formato (0000-00-00): ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,cedu,espacio,fecha,horaEntrada,horaSalida FROM tb_registro WHERE fecha='" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Hora de Entrada") {

            String ced = JOptionPane.showInputDialog("Ingrese la hora de Entrada con el siguiente formato (00:00:00): ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,cedu,espacio,fecha,HoraEntrada,horaSalida FROM tb_registro WHERE horaEntrada='" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Hora de Salida") {

            String ced = JOptionPane.showInputDialog("Ingrese la hora de Salida con el siguiente formato (00:00:00): ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m4.removeRow(i);
                }

                Datos.setModel(m4);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,cedu,espacio,fecha,HoraEntrada,horaSalida FROM tb_registro WHERE horaSalida='" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m4.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
        pdfRE RE2 = new pdfRE();
        RE2.reporteRE();
    }//GEN-LAST:event_btnPDFActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        ExcelRE RE = new ExcelRE();
        RE.reporteRE();
    }//GEN-LAST:event_btnExcelActionPerformed

    private void DatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DatosMouseClicked
        txtCedula.setEnabled(true);
        txtEspacio.setEnabled(true);
        txtHoraE.setEnabled(true);
        txtHoraS.setEnabled(true);
        txtFecha.setEnabled(true);
        btnModificar1.setEnabled(true);
        btnEliminar1.setEnabled(true);

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT cedu,espacio,fecha,horaEntrada,horaSalida FROM tb_registro WHERE id=?");
            ps.setInt(1, Integer.parseInt(codigo));
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCedula.setText(rs.getString("cedu"));
                txtFecha.setDate(rs.getDate("fecha"));
                txtEspacio.setText(rs.getString("espacio"));
                txtHoraE.setText(rs.getString("horaEntrada"));
                txtHoraS.setText(rs.getString("horaSalida"));

            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosMouseClicked

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
        int Fila = Datos.getSelectedRow();

        String codigo = Datos.getValueAt(Fila, 0).toString();

        mod2.setId(Integer.parseInt(codigo));

        if (re.eliminar(mod2)) {
            JOptionPane.showMessageDialog(null, "Eliminado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar");
            limpiar();
        }

        m4.removeRow(Fila);

        txtCedula.setEnabled(false);
        txtEspacio.setEnabled(false);
        txtFecha.setEnabled(false);
        txtHoraE.setEnabled(false);
        txtHoraS.setEnabled(false);
        btnIngresar.setEnabled(false);
        btnModificar1.setEnabled(false);
        btnEliminar1.setEnabled(false);
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    private void txtCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyPressed
        if (evt.getKeyCode() == 40) {
            txtEspacio.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod2.setCedula(Integer.parseInt(txtCedula.getText()));
            mod2.setEspacio(Integer.parseInt(txtEspacio.getText()));
            mod2.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            mod2.setHoraE(txtHoraE.getText());
            mod2.setHoraS(txtHoraS.getText());

            if (re.ingresar(mod2)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtEspacio.setEnabled(false);
            txtHoraE.setEnabled(false);
            txtHoraS.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnCargar.setEnabled(false);
            btnModificar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtCedulaKeyPressed

    private void txtEspacioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEspacioKeyPressed
        if (evt.getKeyCode() == 40) {
            txtHoraE.requestFocus();
        } else if (evt.getKeyCode() == 38){
            txtCedula.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod2.setCedula(Integer.parseInt(txtCedula.getText()));
            mod2.setEspacio(Integer.parseInt(txtEspacio.getText()));
            mod2.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            mod2.setHoraE(txtHoraE.getText());
            mod2.setHoraS(txtHoraS.getText());

            if (re.ingresar(mod2)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtEspacio.setEnabled(false);
            txtHoraE.setEnabled(false);
            txtHoraS.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnCargar.setEnabled(false);
            btnModificar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtEspacioKeyPressed

    private void txtHoraEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraEKeyPressed
        if (evt.getKeyCode() == 40) {
            txtHoraS.requestFocus();
        } else if (evt.getKeyCode() == 38){
            txtEspacio.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod2.setCedula(Integer.parseInt(txtCedula.getText()));
            mod2.setEspacio(Integer.parseInt(txtEspacio.getText()));
            mod2.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            mod2.setHoraE(txtHoraE.getText());
            mod2.setHoraS(txtHoraS.getText());

            if (re.ingresar(mod2)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtEspacio.setEnabled(false);
            txtHoraE.setEnabled(false);
            txtHoraS.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnCargar.setEnabled(false);
            btnModificar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtHoraEKeyPressed

    private void txtHoraSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraSKeyPressed
        if (evt.getKeyCode() == 38){
            txtHoraE.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod2.setCedula(Integer.parseInt(txtCedula.getText()));
            mod2.setEspacio(Integer.parseInt(txtEspacio.getText()));
            mod2.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            mod2.setHoraE(txtHoraE.getText());
            mod2.setHoraS(txtHoraS.getText());

            if (re.ingresar(mod2)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            txtCedula.setEnabled(false);
            txtEspacio.setEnabled(false);
            txtHoraE.setEnabled(false);
            txtHoraS.setEnabled(false);
            btnIngresar.setEnabled(false);
            btnCargar.setEnabled(false);
            btnModificar1.setEnabled(false);
        }
    }//GEN-LAST:event_txtHoraSKeyPressed

    public void limpiar() {
        txtCedula.setText(null);
        txtFecha.setDate(null);
        txtEspacio.setText(null);
        txtHoraE.setText(null);
        txtHoraS.setText(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Datos;
    private javax.swing.JPopupMenu MenuTabla;
    private javax.swing.JMenuItem btnBuscar1;
    private javax.swing.JButton btnCargar;
    private javax.swing.JMenuItem btnEliminar1;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JMenuItem btnModificar1;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPDF;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtEspacio;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JTextField txtHoraE;
    private javax.swing.JTextField txtHoraS;
    // End of variables declaration//GEN-END:variables
}
