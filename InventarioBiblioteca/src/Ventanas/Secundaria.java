/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import javax.swing.table.DefaultTableModel;
import Modelo.Conexion2;
import com.mysql.jdbc.Connection;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author usuario
 */
public class Secundaria extends javax.swing.JFrame {

    /**
     * Creates new form Secundaria
     */
    String equipo;
    
    DefaultTableModel m2= new DefaultTableModel();
    
    PreparedStatement ps=null;
    ResultSet rs=null;
    public Secundaria() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagenes/icono.png")).getImage());
        
        this.Tabla2.setModel(m2);
        this.m2.addColumn("Codigo");
        this.m2.addColumn("Nombre");
        this.m2.addColumn("Apellido");
        this.m2.addColumn("Fecha");
        this.m2.addColumn("Hora");
        this.m2.addColumn("Codigo Equipo");
        this.m2.addColumn("Fecha devolucion");
        this.m2.addColumn("Hora devolucion");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnMostrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        btnCargar = new javax.swing.JButton();
        btnInstru = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtApe = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        txtCodE = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFP = new javax.swing.JTextField();
        txtHP = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla2 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtHD = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtFD = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setTitle("Bitacora");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnMostrar.setMnemonic('v');
        btnMostrar.setText("Mostrar");
        btnMostrar.setToolTipText("Alt+V");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        btnEliminar.setMnemonic('q');
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Alt+Q");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setMnemonic('t');
        btnModificar.setText("Modificar");
        btnModificar.setToolTipText("Alt+T");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnExportar.setMnemonic('r');
        btnExportar.setText("Exportar");
        btnExportar.setToolTipText("Alt+R");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        btnCargar.setMnemonic('a');
        btnCargar.setText("Cargar");
        btnCargar.setToolTipText("Alt+A");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnInstru.setMnemonic('z');
        btnInstru.setText("Instrucciones");
        btnInstru.setToolTipText("Alt+Z");
        btnInstru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInstruActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInstru)
                    .addComponent(btnMostrar)
                    .addComponent(btnEliminar)
                    .addComponent(btnModificar)
                    .addComponent(btnExportar)
                    .addComponent(btnCargar))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnMostrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInstru)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Nombre");

        txtNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomKeyPressed(evt);
            }
        });

        jLabel2.setText("Apellido");

        txtApe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApeKeyPressed(evt);
            }
        });

        jLabel3.setText("Codigo del equipo");

        btnIngresar.setText("Ingresar");
        btnIngresar.setToolTipText("Enter");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        txtCodE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodEKeyPressed(evt);
            }
        });

        jLabel4.setText("Fecha");

        jLabel5.setText("Hora");

        txtFP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFPKeyPressed(evt);
            }
        });

        txtHP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHPKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodE, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFP, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtApe, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(71, 71, 71)
                        .addComponent(btnIngresar)
                        .addContainerGap(158, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCodE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(btnIngresar)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabla2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla2MouseClicked(evt);
            }
        });
        Tabla2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Tabla2KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 769, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnLimpiar.setMnemonic('p');
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setToolTipText("Alt+P");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnBuscar.setMnemonic('x');
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Alt+X");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSalir.setMnemonic('n');
        btnSalir.setText("Salir");
        btnSalir.setToolTipText("Alt+N");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir)
                    .addComponent(btnBuscar)
                    .addComponent(btnLimpiar))
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnLimpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setText("Hora devolucion");

        txtHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHDKeyPressed(evt);
            }
        });

        jLabel7.setText("Fecha devolucion");

        txtFD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFDKeyPressed(evt);
            }
        });

        jLabel8.setText("Codigo");

        txtCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodKeyPressed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.setToolTipText("Enter");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(44, 44, 44))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtHD, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(txtFD, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(188, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnActualizar)
                        .addGap(53, 53, 53))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnActualizar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menu1.setText("Inventario");
        jMenuBar1.add(Menu1);

        jMenu2.setText("Bitacora");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Buscar bus= new Buscar();
        bus.setVisible(true);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        Mostrar2 mos= new Mostrar2();
        mos.setVisible(true);
        
        for(int i=0; i<Tabla2.getRowCount(); i++){
            String Datos[]=new String[8];
            Datos[0]=Tabla2.getValueAt(i,0).toString();
            Datos[1]=Tabla2.getValueAt(i,1).toString();
            Datos[2]=Tabla2.getValueAt(i,2).toString();
            Datos[3]=Tabla2.getValueAt(i,3).toString();
            Datos[4]=Tabla2.getValueAt(i,4).toString();
            Datos[5]=Tabla2.getValueAt(i,5).toString();
            Datos[6]=Tabla2.getValueAt(i,6).toString();
            Datos[7]=Tabla2.getValueAt(i,7).toString();
            
            Mostrar2.m4.addRow(Datos);
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    public void openFile(String file){
        try{
            File path=new File(file);
            Desktop.getDesktop().open(path);
        }catch(IOException ioe){
            System.out.println(ioe);   
        }
    }
    
    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        try{
            JFileChooser chooser= new JFileChooser();
            chooser.showSaveDialog(this);
            File saveFile= chooser.getSelectedFile();
            if(saveFile!=null){
                saveFile=new File(saveFile.toString()+".xlsx");
                Workbook wb=new XSSFWorkbook();
                Sheet sheet=wb.createSheet("Codigo");
                
                Row rowCol = sheet.createRow(0);
                for(int i=0; i<Tabla2.getColumnCount(); i++){
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(Tabla2.getColumnName(i));
                }
                
                for(int j=0;j<Tabla2.getRowCount(); j++){
                    Row row=sheet.createRow(j);
                    for(int k=0; k<Tabla2.getColumnCount(); k++){
                        Cell cell= row.createCell(k);
                        if(Tabla2.getValueAt(j,k)!=null){
                            cell.setCellValue(Tabla2.getValueAt(j,k).toString());
                        }
                    }
                }
                FileOutputStream out= new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());
                
                JOptionPane.showMessageDialog(null,"Se ha exportado con exito");
            }else{
                JOptionPane.showMessageDialog(null,"Error al generar archivo");
            }
        }catch(FileNotFoundException e){
        }catch(IOException io){
            System.out.println(io);
        }
    }//GEN-LAST:event_btnExportarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    public void pedir(){
        String camp=txtCodE.getText();
        String where="";
        
        if(!"".equals(camp)){
            where="WHERE codigo='" + camp + "'";
        }
        
        try{
            Conexion2 conn=new Conexion2();
            Connection con= conn.getConexion();
            
            String sql="SELECT descripcion FROM inventario " + where;
            System.out.println(sql);
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd=rs.getMetaData();
            int cantidadColumn=rsMd.getColumnCount();
            
            while(rs.next()){ 
                
                for(int i=0; i<cantidadColumn; i++){
                    equipo=(String) rs.getObject(i);
                }    
            }
        }catch(Exception ex){
            System.err.println(ex.toString());
        }
    }
    
    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        Conexion2 objCon = new Conexion2();
        Connection conn= objCon.getConexion();
        
        try{
            String sql="INSERT INTO bitacora(nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD) VALUES (?, ?, ?, ?, ?,?,?)";
            ps=conn.prepareStatement(sql);
            
            ps.setString(1, txtNom.getText());
            ps.setString(2, txtApe.getText());
            ps.setString(3, txtFP.getText());
            ps.setString(4, txtHP.getText());
            ps.setString(5, txtCodE.getText());
            ps.setString(6, txtFD.getText());
            ps.setString(7, txtHD.getText());
            
            int res= ps.executeUpdate();
            
            if(res>0){
                JOptionPane.showMessageDialog(null,"Guardado con exito");
            }
            else{
                JOptionPane.showMessageDialog(null,"Error al guardar");
            }
            
            Object[] fila=new Object[8];
            fila[0]=txtNom.getText();
            fila[1]=txtApe.getText();
            fila[2]=txtFP.getText();
            fila[3]=txtHP.getText();
            fila[4]=txtCodE.getText();
            fila[5]=txtFD.getText();
            fila[6]=txtHD.getText();
            
            m2.addRow(fila);
            
            this.txtNom.setText("");
            this.txtApe.setText("");
            this.txtFP.setText("");
            this.txtHP.setText("");
            this.txtCodE.setText("");
            
        }catch(Exception ex){
            System.err.println(ex);
        }
        
       /* try{
            String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
            ps=conn.prepareStatement(sql);
            
            ps.setString(1, txtDispo.getSelectedItem().toString());
            ps.setString(2, txtCodE.getText());
            
            
            int res= ps.executeUpdate();
            
            if(res>0){
                JOptionPane.showMessageDialog(null,"Guardado con exito");
            }
            else{
                JOptionPane.showMessageDialog(null,"Error al guardar");
            }
        }catch(Exception ex){
            System.err.println(ex);
        }*/
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int Fila = Tabla2.getSelectedRow();
        
        try {
            Conexion2 objCon = new Conexion2();
            Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("UPDATE bitacora SET nombre=?, apellido=?, fechaP=?, horaP=?, codigoE=? WHERE codigo=?");

            ps.setString(1, txtNom.getText());
            ps.setString(2, txtApe.getText());
            ps.setString(3, txtFP.getText());
            ps.setString(4, txtHP.getText());
            ps.setString(5, txtCodE.getText());
            ps.setString(6, txtCod.getText());

            ps.execute();

            JOptionPane.showMessageDialog(null, "Modificado con exito");
            Tabla2.setValueAt(txtCod.getText(), Fila, 0);
            Tabla2.setValueAt(txtNom.getText(), Fila, 1);
            Tabla2.setValueAt(txtApe.getText(), Fila, 2);
            Tabla2.setValueAt(txtFP.getText(), Fila, 3);
            Tabla2.setValueAt(txtHP.getText(), Fila, 4);
            Tabla2.setValueAt(txtCodE.getText(), Fila, 5);

            this.txtCod.setText("");
            this.txtNom.setText("");
            this.txtApe.setText("");
            this.txtFP.setText("");
            this.txtHP.setText("");
            this.txtCodE.setText("");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Modificar");
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void Tabla2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla2MouseClicked
        try {
            Conexion2 objCon = new Conexion2();
            Connection conn = objCon.getConexion();

            int Fila = Tabla2.getSelectedRow();
            String codigo = Tabla2.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT codigo, nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD FROM bitacora WHERE codigo=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCod.setText(rs.getString("codigo"));
                txtNom.setText(rs.getString("nombre"));
                txtApe.setText(rs.getString("apellido"));
                txtFP.setText(rs.getString("fechaP"));
                txtHP.setText(rs.getString("horaP"));
                txtCodE.setText(rs.getString("codigoE"));
                txtFD.setText(rs.getString("fechaD"));
                txtHD.setText(rs.getString("horaD"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_Tabla2MouseClicked

    private void Tabla2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tabla2KeyReleased
        try {
            Conexion2 objCon = new Conexion2();
            Connection conn = objCon.getConexion();

            int Fila = Tabla2.getSelectedRow();
            String codigo = Tabla2.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT codigo, nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD FROM bitacora WHERE codigo=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCod.setText(rs.getString("codigo"));
                txtNom.setText(rs.getString("nombre"));
                txtApe.setText(rs.getString("apellido"));
                txtFP.setText(rs.getString("fechaP"));
                txtHP.setText(rs.getString("horaP"));
                txtCodE.setText(rs.getString("codigoE"));
                txtFD.setText(rs.getString("fechaD"));
                txtHD.setText(rs.getString("horaD"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_Tabla2KeyReleased

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        try{
            Conexion2 objCon= new Conexion2();
            Connection conn= objCon.getConexion();
 
            ps=conn.prepareStatement("DELETE FROM bitacora");
            ps.execute();
            
            int fila=Tabla2.getRowCount();
        
            for(int i=fila-1; i>=0;i--){
                m2.removeRow(i);
            }
            
        }catch(SQLException ex){
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try{
            Conexion2 objCon= new Conexion2();
            Connection conn= objCon.getConexion();
            
            int Fila=Tabla2.getSelectedRow();
            String codigo=Tabla2.getValueAt(Fila,0).toString();
            
            ps=conn.prepareStatement("DELETE FROM bitacora WHERE codigo=?");
            ps.setString(1, codigo);
            ps.execute();
            
            m2.removeRow(Fila);
            
        }catch(SQLException ex){
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        int fila=Tabla2.getRowCount();
        
        for(int i=fila-1; i>=0;i--){
            m2.removeRow(i);
        }
        
        try{
            Tabla2.setModel(m2);
            
            Conexion2 conn=new Conexion2();
            Connection con= conn.getConexion();
            
            String sql="SELECT codigo,nombre,apellido,fechaP,horaP,codigoE,fechaD,horaD FROM bitacora";
            ps=con.prepareStatement(sql);
            rs=ps.executeQuery();
            
            ResultSetMetaData rsMd=rs.getMetaData();
            int cantidadColumn=rsMd.getColumnCount();
            
            
            
            while(rs.next()){
                
                Object[] filas= new Object[cantidadColumn];
                
                for(int i=0; i<cantidadColumn; i++){
                    filas[i]=rs.getObject(i+1);
                }
                
                m2.addRow(filas);
            }
            
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnInstruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInstruActionPerformed
        Instrucciones2 instru= new Instrucciones2();
        instru.setVisible(true);
    }//GEN-LAST:event_btnInstruActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int Fila = Tabla2.getSelectedRow();
        
        try {
            Conexion2 objCon = new Conexion2();
            Connection conn = objCon.getConexion();
            String sql="UPDATE bitacora SET fechaD=?, horaD=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtFD.getText());
                ps.setString(2, txtHD.getText());
                ps.setString(3, txtCod.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Tabla2.setValueAt(txtCod.getText(), Fila, 0);
                Tabla2.setValueAt(txtNom.getText(), Fila, 1);
                Tabla2.setValueAt(txtApe.getText(), Fila, 2);
                Tabla2.setValueAt(txtFP.getText(), Fila, 3);
                Tabla2.setValueAt(txtHP.getText(), Fila, 4);
                Tabla2.setValueAt(txtCodE.getText(), Fila, 5);
                Tabla2.setValueAt(txtFD.getText(), Fila, 6);
                Tabla2.setValueAt(txtHD.getText(), Fila, 7);
            
                this.txtCod.setText("");
                this.txtHD.setText("");
                this.txtFD.setText("");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Modificar");
            System.out.println(ex);
        }
        
        /*try {
            Conexion2 objCon = new Conexion2();
            Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("UPDATE inventario SET disponibilidad=? WHERE codigo=?");

            ps.setString(1, txtFD.getText());
            ps.setString(2, txtHD.getText());
            ps.setString(3, txtCod.getText());

            ps.execute();

            JOptionPane.showMessageDialog(null, "Modificado con exito");
            Tabla2.setValueAt(txtCod.getText(), Fila, 0);
            Tabla2.setValueAt(txtFD.getText(), Fila, 1);
            Tabla2.setValueAt(txtHD.getText(), Fila, 2);

            this.txtCod.setText("");
            this.txtFD.setText("");
            this.txtHD.setText("");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Modificar");
            System.out.println(ex);
        }*/
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtNomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion2 objCon = new Conexion2();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO bitacora(nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD) VALUES (?, ?, ?, ?, ?,?,?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtNom.getText());
                ps.setString(2, txtApe.getText());
                ps.setString(3, txtFP.getText());
                ps.setString(4, txtHP.getText());
                ps.setString(5, txtCodE.getText());
                ps.setString(6, txtFD.getText());
                ps.setString(7, txtHD.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[8];
                fila[0]=txtNom.getText();
                fila[1]=txtApe.getText();
                fila[2]=txtFP.getText();
                fila[3]=txtHP.getText();
                fila[4]=txtCodE.getText();
                fila[5]=txtFD.getText();
                fila[6]=txtHD.getText();
            
                m2.addRow(fila);
            
                this.txtNom.setText("");
                this.txtApe.setText("");
                this.txtFP.setText("");
                this.txtHP.setText("");
                this.txtCodE.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
            
            /*try{
                String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtDispo.getSelectedItem().toString());
                ps.setString(2, txtCodE.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
            }catch(Exception ex){
                System.err.println(ex);
            }*/
        }
        
        if(evt.getKeyCode()==40){
            txtApe.requestFocus();
        }
    }//GEN-LAST:event_txtNomKeyPressed

    private void txtApeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApeKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion2 objCon = new Conexion2();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO bitacora(nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD) VALUES (?, ?, ?, ?, ?,?,?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtNom.getText());
                ps.setString(2, txtApe.getText());
                ps.setString(3, txtFP.getText());
                ps.setString(4, txtHP.getText());
                ps.setString(5, txtCodE.getText());
                ps.setString(6, txtFD.getText());
                ps.setString(7, txtHD.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[8];
                fila[0]=txtNom.getText();
                fila[1]=txtApe.getText();
                fila[2]=txtFP.getText();
                fila[3]=txtHP.getText();
                fila[4]=txtCodE.getText();
                fila[5]=txtFD.getText();
                fila[6]=txtHD.getText();
            
                m2.addRow(fila);
            
                this.txtNom.setText("");
                this.txtApe.setText("");
                this.txtFP.setText("");
                this.txtHP.setText("");
                this.txtCodE.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
            
            /*try{
                String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtDispo.getSelectedItem().toString());
                ps.setString(2, txtCodE.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
            }catch(Exception ex){
                System.err.println(ex);
            }*/
        }
        
        if(evt.getKeyCode()==40){
            txtFP.requestFocus();
        }
        else if(evt.getKeyCode()==38){
            txtNom.requestFocus();
        }
    }//GEN-LAST:event_txtApeKeyPressed

    private void txtFPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFPKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion2 objCon = new Conexion2();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO bitacora(nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD) VALUES (?, ?, ?, ?, ?,?,?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtNom.getText());
                ps.setString(2, txtApe.getText());
                ps.setString(3, txtFP.getText());
                ps.setString(4, txtHP.getText());
                ps.setString(5, txtCodE.getText());
                ps.setString(6, txtFD.getText());
                ps.setString(7, txtHD.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[8];
                fila[0]=txtNom.getText();
                fila[1]=txtApe.getText();
                fila[2]=txtFP.getText();
                fila[3]=txtHP.getText();
                fila[4]=txtCodE.getText();
                fila[5]=txtFD.getText();
                fila[6]=txtHD.getText();
            
                m2.addRow(fila);
            
                this.txtNom.setText("");
                this.txtApe.setText("");
                this.txtFP.setText("");
                this.txtHP.setText("");
                this.txtCodE.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
            
           /* try{
                String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtDispo.getSelectedItem().toString());
                ps.setString(2, txtCodE.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
            }catch(Exception ex){
                System.err.println(ex);
            }*/
        }
        
        if(evt.getKeyCode()==40){
            txtHP.requestFocus();
        }
        else if(evt.getKeyCode()==38){
            txtApe.requestFocus();
        }
    }//GEN-LAST:event_txtFPKeyPressed

    private void txtHPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHPKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion2 objCon = new Conexion2();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO bitacora(nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD) VALUES (?, ?, ?, ?, ?,?,?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtNom.getText());
                ps.setString(2, txtApe.getText());
                ps.setString(3, txtFP.getText());
                ps.setString(4, txtHP.getText());
                ps.setString(5, txtCodE.getText());
                ps.setString(6, txtFD.getText());
                ps.setString(7, txtHD.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[8];
                fila[0]=txtNom.getText();
                fila[1]=txtApe.getText();
                fila[2]=txtFP.getText();
                fila[3]=txtHP.getText();
                fila[4]=txtCodE.getText();
                fila[5]=txtFD.getText();
                fila[6]=txtHD.getText();
            
                m2.addRow(fila);
            
                this.txtNom.setText("");
                this.txtApe.setText("");
                this.txtFP.setText("");
                this.txtHP.setText("");
                this.txtCodE.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
            
            /*try{
                String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtDispo.getSelectedItem().toString());
                ps.setString(2, txtCodE.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
            }catch(Exception ex){
                System.err.println(ex);
            }*/
        }
        
        if(evt.getKeyCode()==40){
            txtCodE.requestFocus();
        }
        else if(evt.getKeyCode()==38){
            txtFP.requestFocus();
        }
    }//GEN-LAST:event_txtHPKeyPressed

    private void txtCodEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodEKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion2 objCon = new Conexion2();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO bitacora(nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD) VALUES (?, ?, ?, ?, ?,?,?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtNom.getText());
                ps.setString(2, txtApe.getText());
                ps.setString(3, txtFP.getText());
                ps.setString(4, txtHP.getText());
                ps.setString(5, txtCodE.getText());
                ps.setString(6, txtFD.getText());
                ps.setString(7, txtHD.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[8];
                fila[0]=txtNom.getText();
                fila[1]=txtApe.getText();
                fila[2]=txtFP.getText();
                fila[3]=txtHP.getText();
                fila[4]=txtCodE.getText();
                fila[5]=txtFD.getText();
                fila[6]=txtHD.getText();
            
                m2.addRow(fila);
            
                this.txtNom.setText("");
                this.txtApe.setText("");
                this.txtFP.setText("");
                this.txtHP.setText("");
                this.txtCodE.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
            
            /*try{
                String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtDispo.getSelectedItem().toString());
                ps.setString(2, txtCodE.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
            }catch(Exception ex){
                System.err.println(ex);
            }*/
        }
        
        if(evt.getKeyCode()==38){
            txtHP.requestFocus();
        }
    }//GEN-LAST:event_txtCodEKeyPressed

    private void txtCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodKeyPressed
        int Fila = Tabla2.getSelectedRow();
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion2 objCon = new Conexion2();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="UPDATE bitacora SET fechaD=?, horaD=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtFD.getText());
                ps.setString(2, txtHD.getText());
                ps.setString(3, txtCod.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Tabla2.setValueAt(txtCod.getText(), Fila, 0);
                Tabla2.setValueAt(txtNom.getText(), Fila, 1);
                Tabla2.setValueAt(txtApe.getText(), Fila, 2);
                Tabla2.setValueAt(txtFP.getText(), Fila, 3);
                Tabla2.setValueAt(txtHP.getText(), Fila, 4);
                Tabla2.setValueAt(txtCodE.getText(), Fila, 5);
                Tabla2.setValueAt(txtFD.getText(), Fila, 6);
                Tabla2.setValueAt(txtHD.getText(), Fila, 7);
            
                this.txtCod.setText("");
                this.txtHD.setText("");
                this.txtFD.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
            
            /*try{
                String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtDispo.getSelectedItem().toString());
                ps.setString(2, txtCodE.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
            }catch(Exception ex){
                System.err.println(ex);
            }*/
        }
        
        if(evt.getKeyCode()==40){
            txtHD.requestFocus();
        }
    }//GEN-LAST:event_txtCodKeyPressed

    private void txtHDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHDKeyPressed
        int Fila = Tabla2.getSelectedRow();
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion2 objCon = new Conexion2();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="UPDATE bitacora SET fechaD=?, horaD=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtFD.getText());
                ps.setString(2, txtHD.getText());
                ps.setString(3, txtCod.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Tabla2.setValueAt(txtCod.getText(), Fila, 0);
                Tabla2.setValueAt(txtNom.getText(), Fila, 1);
                Tabla2.setValueAt(txtApe.getText(), Fila, 2);
                Tabla2.setValueAt(txtFP.getText(), Fila, 3);
                Tabla2.setValueAt(txtHP.getText(), Fila, 4);
                Tabla2.setValueAt(txtCodE.getText(), Fila, 5);
                Tabla2.setValueAt(txtFD.getText(), Fila, 6);
                Tabla2.setValueAt(txtHD.getText(), Fila, 7);
            
                this.txtCod.setText("");
                this.txtHD.setText("");
                this.txtFD.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
            
            /*try{
                String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtDispo.getSelectedItem().toString());
                ps.setString(2, txtCodE.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
            }catch(Exception ex){
                System.out.println(ex);
            }*/
        }
        
        if(evt.getKeyCode()==40){
            txtFD.requestFocus();
        }
        else if(evt.getKeyCode()==38){
            txtCod.requestFocus();
        }
    }//GEN-LAST:event_txtHDKeyPressed

    private void txtFDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFDKeyPressed
        int Fila = Tabla2.getSelectedRow();
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion2 objCon = new Conexion2();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="UPDATE bitacora SET fechaD=?, horaD=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtFD.getText());
                ps.setString(2, txtHD.getText());
                ps.setString(3, txtCod.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Tabla2.setValueAt(txtCod.getText(), Fila, 0);
                Tabla2.setValueAt(txtNom.getText(), Fila, 1);
                Tabla2.setValueAt(txtApe.getText(), Fila, 2);
                Tabla2.setValueAt(txtFP.getText(), Fila, 3);
                Tabla2.setValueAt(txtHP.getText(), Fila, 4);
                Tabla2.setValueAt(txtCodE.getText(), Fila, 5);
                Tabla2.setValueAt(txtFD.getText(), Fila, 6);
                Tabla2.setValueAt(txtHD.getText(), Fila, 7);
            
                this.txtCod.setText("");
                this.txtHD.setText("");
                this.txtFD.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
            
            /*try{
                String sql="UPDATE inventario SET disponibilidad=? WHERE codigo=?";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtDispo.getSelectedItem().toString());
                ps.setString(2, txtCodE.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
            }catch(Exception ex){
                System.err.println(ex);
            }*/
        }
        
        if(evt.getKeyCode()==38){
            txtHD.requestFocus();
        }
    }//GEN-LAST:event_txtFDKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Secundaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Secundaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Secundaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Secundaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Secundaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu1;
    private javax.swing.JTable Tabla2;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnInstru;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApe;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtCodE;
    private javax.swing.JTextField txtFD;
    private javax.swing.JTextField txtFP;
    private javax.swing.JTextField txtHD;
    private javax.swing.JTextField txtHP;
    private javax.swing.JTextField txtNom;
    // End of variables declaration//GEN-END:variables
}
