/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Modelo.Conexion2;
import com.mysql.jdbc.Connection;
import com.sun.glass.events.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class Buscar extends javax.swing.JFrame {

    /**
     * Creates new form Buscar
     */
    
    DefaultTableModel m5= new DefaultTableModel();
    
    PreparedStatement ps=null;
    ResultSet rs=null;
    public Buscar() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagenes/icono.png")).getImage());
        
        this.Tabla4.setModel(m5);
        this.m5.addColumn("Codigo");
        this.m5.addColumn("Nombre");
        this.m5.addColumn("Apellido");
        this.m5.addColumn("Fecha");
        this.m5.addColumn("Hora");
        this.m5.addColumn("Codigo Equipo");
        this.m5.addColumn("Fecha devolucion");
        this.m5.addColumn("Hora devolucion");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApe = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCodE = new javax.swing.JTextField();
        txtBuscar = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla4 = new javax.swing.JTable();

        setTitle("Buscar");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Codigo");

        txtCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodKeyPressed(evt);
            }
        });

        jLabel2.setText("Nombre");

        txtNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomKeyPressed(evt);
            }
        });

        jLabel3.setText("Apellido");

        txtApe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApeKeyPressed(evt);
            }
        });

        jLabel4.setText("CodigoEquipo");

        txtCodE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodEKeyPressed(evt);
            }
        });

        txtBuscar.setText("Buscando por: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jButton1)
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCod))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNom))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtApe))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtBuscar)
                .addGap(58, 58, 58))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscar)
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jButton1)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Tabla4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabla4);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String camp=txtCod.getText();
        String camp2=txtNom.getText();
        String camp3=txtApe.getText();
        String camp4=txtCodE.getText();
        String where="";
        
        int fila=Tabla4.getRowCount();
        
        for(int i=fila-1; i>=0;i--){
            m5.removeRow(i);
        }
        
        if(!"".equals(camp)){
            where="WHERE codigo='" + camp + "'";
            txtBuscar.setText("Buscando por: codigo");
        }
        else if(!"".equals(camp2)){
            where="WHERE nombre='" + camp2 + "'";
            txtBuscar.setText("Buscando por: nombre");
        }
        else if(!"".equals(camp3)){
            where="WHERE apellido='" + camp3 + "'";
            txtBuscar.setText("Buscando por: apellido");
        }
        else if(!"".equals(camp4)){
            where="WHERE codigoE='" + camp4 + "'";
            txtBuscar.setText("Buscando por: codido del equipo");
        }
        
        try{
            Tabla4.setModel(m5);
            
            Conexion2 conn=new Conexion2();
            Connection con= conn.getConexion();
            
            String sql="SELECT codigo, nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD FROM bitacora " + where;
            System.out.println(sql);
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd=rs.getMetaData();
            int cantidadColumn=rsMd.getColumnCount();
            
            while(rs.next()){
                
                Object[] filas= new Object[cantidadColumn];
                
                for(int i=0; i<cantidadColumn; i++){
                    filas[i]=rs.getObject(i+1);
                }
                
                m5.addRow(filas);
            }
            
            txtCod.setText("");
            txtNom.setText("");
            txtApe.setText("");
            txtCodE.setText("");
            
        }catch(Exception ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String camp=txtCod.getText();
            String camp2=txtNom.getText();
            String camp3=txtApe.getText();
            String camp4=txtCodE.getText();
            String where="";
        
            int fila=Tabla4.getRowCount();
        
            for(int i=fila-1; i>=0;i--){
                m5.removeRow(i);
            }
        
            if(!"".equals(camp)){
                where="WHERE codigo='" + camp + "'";
                txtBuscar.setText("Buscando por: codigo");
            }
            else if(!"".equals(camp2)){
                where="WHERE nombre='" + camp2 + "'";
                txtBuscar.setText("Buscando por: nombre");
            }
            else if(!"".equals(camp3)){
                where="WHERE apellido='" + camp3 + "'";
                txtBuscar.setText("Buscando por: apellido");
            }
            else if(!"".equals(camp4)){
                where="WHERE codigoE='" + camp4 + "'";
                txtBuscar.setText("Buscando por: codido del equipo");
            }
        
            try{
                Tabla4.setModel(m5);
            
                Conexion2 conn=new Conexion2();
                Connection con= conn.getConexion();
            
                String sql="SELECT codigo, nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD FROM bitacora " + where;
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
            
                ResultSetMetaData rsMd=rs.getMetaData();
                int cantidadColumn=rsMd.getColumnCount();
            
                while(rs.next()){
                
                    Object[] filas= new Object[cantidadColumn];
                
                    for(int i=0; i<cantidadColumn; i++){
                        filas[i]=rs.getObject(i+1);
                    }
                
                    m5.addRow(filas);
                }
                
                txtCod.setText("");
                txtNom.setText("");
                txtApe.setText("");
                txtCodE.setText("");
            
            }catch(Exception ex){
                System.err.println(ex.toString());
            }
        }
       
       if(evt.getKeyCode()==40){
           txtNom.requestFocus();
       }
    }//GEN-LAST:event_txtCodKeyPressed

    private void txtNomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String camp=txtCod.getText();
            String camp2=txtNom.getText();
            String camp3=txtApe.getText();
            String camp4=txtCodE.getText();
            String where="";
        
            int fila=Tabla4.getRowCount();
        
            for(int i=fila-1; i>=0;i--){
                m5.removeRow(i);
            }
        
            if(!"".equals(camp)){
                where="WHERE codigo='" + camp + "'";
                txtBuscar.setText("Buscando por: codigo");
            }
            else if(!"".equals(camp2)){
                where="WHERE nombre='" + camp2 + "'";
                txtBuscar.setText("Buscando por: nombre");
            }
            else if(!"".equals(camp3)){
                where="WHERE apellido='" + camp3 + "'";
                txtBuscar.setText("Buscando por: apellido");
            }
            else if(!"".equals(camp4)){
                where="WHERE codigoE='" + camp4 + "'";
                txtBuscar.setText("Buscando por: codido del equipo");
            }
        
            try{
                Tabla4.setModel(m5);
            
                Conexion2 conn=new Conexion2();
                Connection con= conn.getConexion();
            
                String sql="SELECT codigo, nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD FROM bitacora " + where;
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
            
                ResultSetMetaData rsMd=rs.getMetaData();
                int cantidadColumn=rsMd.getColumnCount();
            
                while(rs.next()){
                
                    Object[] filas= new Object[cantidadColumn];
                
                    for(int i=0; i<cantidadColumn; i++){
                        filas[i]=rs.getObject(i+1);
                    }
                
                    m5.addRow(filas);
                }
                
                txtCod.setText("");
                txtNom.setText("");
                txtApe.setText("");
                txtCodE.setText("");
            
            }catch(Exception ex){
                System.err.println(ex.toString());
            }
        }
       
       if(evt.getKeyCode()==40){
           txtApe.requestFocus();
       }
       else if(evt.getKeyCode()==38){
           txtCod.requestFocus();
       }
    }//GEN-LAST:event_txtNomKeyPressed

    private void txtApeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApeKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String camp=txtCod.getText();
            String camp2=txtNom.getText();
            String camp3=txtApe.getText();
            String camp4=txtCodE.getText();
            String where="";
        
            int fila=Tabla4.getRowCount();
        
            for(int i=fila-1; i>=0;i--){
                m5.removeRow(i);
            }
        
            if(!"".equals(camp)){
                where="WHERE codigo='" + camp + "'";
                txtBuscar.setText("Buscando por: codigo");
            }
            else if(!"".equals(camp2)){
                where="WHERE nombre='" + camp2 + "'";
                txtBuscar.setText("Buscando por: nombre");
            }
            else if(!"".equals(camp3)){
                where="WHERE apellido='" + camp3 + "'";
                txtBuscar.setText("Buscando por: apellido");
            }
            else if(!"".equals(camp4)){
                where="WHERE codigoE='" + camp4 + "'";
                txtBuscar.setText("Buscando por: codido del equipo");
            }
        
            try{
                Tabla4.setModel(m5);
            
                Conexion2 conn=new Conexion2();
                Connection con= conn.getConexion();
            
                String sql="SELECT codigo, nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD FROM bitacora " + where;
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
            
                ResultSetMetaData rsMd=rs.getMetaData();
                int cantidadColumn=rsMd.getColumnCount();
            
                while(rs.next()){
                
                    Object[] filas= new Object[cantidadColumn];
                
                    for(int i=0; i<cantidadColumn; i++){
                        filas[i]=rs.getObject(i+1);
                    }
                
                    m5.addRow(filas);
                }
                
                txtCod.setText("");
                txtNom.setText("");
                txtApe.setText("");
                txtCodE.setText("");
            
            }catch(Exception ex){
                System.err.println(ex.toString());
            }
        }
       
       if(evt.getKeyCode()==40){
           txtCodE.requestFocus();
       }
       else if(evt.getKeyCode()==38){
           txtNom.requestFocus();
       }
    }//GEN-LAST:event_txtApeKeyPressed

    private void txtCodEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodEKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            String camp=txtCod.getText();
            String camp2=txtNom.getText();
            String camp3=txtApe.getText();
            String camp4=txtCodE.getText();
            String where="";
        
            int fila=Tabla4.getRowCount();
        
            for(int i=fila-1; i>=0;i--){
                m5.removeRow(i);
            }
        
            if(!"".equals(camp)){
                where="WHERE codigo='" + camp + "'";
                txtBuscar.setText("Buscando por: codigo");
            }
            else if(!"".equals(camp2)){
                where="WHERE nombre='" + camp2 + "'";
                txtBuscar.setText("Buscando por: nombre");
            }
            else if(!"".equals(camp3)){
                where="WHERE apellido='" + camp3 + "'";
                txtBuscar.setText("Buscando por: apellido");
            }
            else if(!"".equals(camp4)){
                where="WHERE codigoE='" + camp4 + "'";
                txtBuscar.setText("Buscando por: codido del equipo");
            }
        
            try{
                Tabla4.setModel(m5);
            
                Conexion2 conn=new Conexion2();
                Connection con= conn.getConexion();
            
                String sql="SELECT codigo, nombre, apellido, fechaP, horaP, codigoE, fechaD, horaD FROM bitacora " + where;
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
            
                ResultSetMetaData rsMd=rs.getMetaData();
                int cantidadColumn=rsMd.getColumnCount();
            
                while(rs.next()){
                
                    Object[] filas= new Object[cantidadColumn];
                
                    for(int i=0; i<cantidadColumn; i++){
                        filas[i]=rs.getObject(i+1);
                    }
                
                    m5.addRow(filas);
                }
                
                txtCod.setText("");
                txtNom.setText("");
                txtApe.setText("");
                txtCodE.setText("");    
            
            }catch(Exception ex){
                System.err.println(ex.toString());
            }
        }
       
       if(evt.getKeyCode()==38){
           txtApe.requestFocus();
       }
    }//GEN-LAST:event_txtCodEKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buscar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla4;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApe;
    private javax.swing.JLabel txtBuscar;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtCodE;
    private javax.swing.JTextField txtNom;
    // End of variables declaration//GEN-END:variables
}
