/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Ventanas;

import java.sql.SQLException;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import Modelo.Conexion;
import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.ImageIcon;

/**
 *
 * @author MauriceLang
 */
public class Principal extends javax.swing.JFrame {
    String c;
    String d;
    String ma;
    String mo;
    String s;
    String e;
    String u;
    String o;
    String r;
    
    DefaultTableModel m= new DefaultTableModel();
    
    PreparedStatement ps=null;
    ResultSet rs=null;
    /** Creates new form Principal */
    public Principal() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagenes/icono.png")).getImage());
        
        this.Tabla.setModel(m);
        this.m.addColumn("Codigo");
        this.m.addColumn("Descripcion");
        this.m.addColumn("Marca");
        this.m.addColumn("Modelo");
        this.m.addColumn("Serie");
        this.m.addColumn("Ubicacion");
        this.m.addColumn("Estado");
        this.m.addColumn("Observacion");
        this.m.addColumn("Revision");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnMostrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnCargar = new javax.swing.JButton();
        btnInstrucciones = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMarc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMod = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtUbi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();
        btnIngresar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtEst = new javax.swing.JComboBox<String>();
        jLabel9 = new javax.swing.JLabel();
        txtRev = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Menu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inventario");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnMostrar.setMnemonic('m');
        btnMostrar.setText("Mostrar");
        btnMostrar.setToolTipText("Alt+M");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        btnEliminar.setMnemonic('d');
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Alt+D");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setMnemonic('u');
        btnModificar.setText("Modificar");
        btnModificar.setToolTipText("Alt+U");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnCargar.setMnemonic('c');
        btnCargar.setText("Cargar");
        btnCargar.setToolTipText("Alt+C");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnInstrucciones.setMnemonic('i');
        btnInstrucciones.setText("Instrucciones");
        btnInstrucciones.setToolTipText("Alt+I");
        btnInstrucciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInstruccionesActionPerformed(evt);
            }
        });

        btnExport.setMnemonic('e');
        btnExport.setText("Exportar");
        btnExport.setToolTipText("Alt+E");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCargar)
                    .addComponent(btnInstrucciones)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnMostrar)
                        .addComponent(btnEliminar))
                    .addComponent(btnModificar)
                    .addComponent(btnExport))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnMostrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInstrucciones)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Codigo");

        txtCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodKeyPressed(evt);
            }
        });

        jLabel2.setText("Descripcion");

        txtDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescKeyPressed(evt);
            }
        });

        jLabel3.setText("Marca");

        txtMarc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMarcKeyPressed(evt);
            }
        });

        jLabel4.setText("Modelo");

        txtMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtModKeyPressed(evt);
            }
        });

        jLabel5.setText("Serie");

        txtSerie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSerieKeyPressed(evt);
            }
        });

        jLabel6.setText("Ubicacion");

        txtUbi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUbiKeyPressed(evt);
            }
        });

        jLabel7.setText("Observacion");

        txtObs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtObsKeyPressed(evt);
            }
        });

        btnIngresar.setText("Ingresar");
        btnIngresar.setToolTipText("Enter");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        jLabel8.setText("Estado");

        txtEst.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Opcion", "Bueno", "Regular", "Malo", " " }));
        txtEst.setToolTipText("");
        txtEst.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstKeyPressed(evt);
            }
        });

        jLabel9.setText("Revision");

        txtRev.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRevKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUbi, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMarc, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRev, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(btnIngresar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtUbi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtMarc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnIngresar))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtRev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnLimpiar.setMnemonic('l');
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setToolTipText("Alt+L");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnBuscar.setMnemonic('b');
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Alt+B");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSalir.setMnemonic('s');
        btnSalir.setText("Salir");
        btnSalir.setToolTipText("Alt+S");
        btnSalir.setName(""); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLimpiar)
                .addGap(171, 171, 171)
                .addComponent(btnBuscar)
                .addGap(26, 26, 26)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar)
                    .addComponent(btnBuscar)
                    .addComponent(btnSalir)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        Tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TablaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jMenu1.setText("Inventario");
        jMenuBar1.add(jMenu1);

        Menu2.setText("Bitacora");
        Menu2.setToolTipText("");
        Menu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(Menu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        Conexion objCon = new Conexion();
        Connection conn= objCon.getConexion();
        
        try{
            String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            ps=conn.prepareStatement(sql);
            
            ps.setString(1, txtCod.getText());
            ps.setString(2, txtDesc.getText());
            ps.setString(3, txtMarc.getText());
            ps.setString(4, txtMod.getText());
            ps.setString(5, txtSerie.getText());
            ps.setString(6, txtUbi.getText());
            ps.setString(7, txtEst.getSelectedItem().toString());
            ps.setString(8, txtObs.getText());
            ps.setString(9, txtRev.getText());
            
            int res= ps.executeUpdate();
            
            if(res>0){
                JOptionPane.showMessageDialog(null,"Guardado con exito");
            }
            else{
                JOptionPane.showMessageDialog(null,"Error al guardar");
            }
            
            Object[] fila=new Object[9];
            fila[0]=txtCod.getText();
            fila[1]=txtDesc.getText();
            fila[2]=txtMarc.getText();
            fila[3]=txtMod.getText();
            fila[4]=txtSerie.getText();
            fila[5]=txtUbi.getText();
            fila[6]=txtEst.getSelectedItem();
            fila[7]=txtObs.getText();
            fila[8]=txtRev.getText();
            
            m.addRow(fila);
            
            this.txtCod.setText("");
            this.txtDesc.setText("");
            this.txtMarc.setText("");
            this.txtMod.setText("");
            this.txtSerie.setText("");
            this.txtUbi.setText("");
            this.txtObs.setText("");
            
        }catch(Exception ex){
            System.err.println(ex);
        }
    }//GEN-LAST:event_btnIngresarActionPerformed
  
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        try{
            Conexion objCon= new Conexion();
            Connection conn= objCon.getConexion();
 
            ps=conn.prepareStatement("DELETE FROM inventario");
            ps.execute();
            
            int fila=Tabla.getRowCount();
        
            for(int i=fila-1; i>=0;i--){
                m.removeRow(i);
            }
            
        }catch(SQLException ex){
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        try{
            Conexion objCon= new Conexion();
            Connection conn= objCon.getConexion();
            
            int Fila=Tabla.getSelectedRow();
            String codigo=Tabla.getValueAt(Fila,0).toString();
            
            ps=conn.prepareStatement("DELETE FROM inventario WHERE codigo=?");
            ps.setString(1, codigo);
            ps.execute();
            
            m.removeRow(Fila);
            
        }catch(SQLException ex){
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int Fila = Tabla.getSelectedRow();
        
        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("UPDATE inventario SET descripcion=?, marca=?, modelo=?, serie=?, ubicacion=?, estado=?, observacion=?, revision=? WHERE codigo=?");

            ps.setString(1, txtDesc.getText());
            ps.setString(2, txtMarc.getText());
            ps.setString(3, txtMod.getText());
            ps.setString(4, txtSerie.getText());
            ps.setString(5, txtUbi.getText());
            ps.setString(6, txtEst.getSelectedItem().toString());
            ps.setString(7, txtObs.getText());
            ps.setString(8, txtRev.getText());
            ps.setString(9, txtCod.getText());

            ps.execute();

            JOptionPane.showMessageDialog(null, "Modificado con exito");
            Tabla.setValueAt(txtCod.getText(), Fila, 0);
            Tabla.setValueAt(txtDesc.getText(), Fila, 1);
            Tabla.setValueAt(txtMarc.getText(), Fila, 2);
            Tabla.setValueAt(txtMod.getText(), Fila, 3);
            Tabla.setValueAt(txtSerie.getText(), Fila, 4);
            Tabla.setValueAt(txtUbi.getText(), Fila, 5);
            Tabla.setValueAt(txtEst.getSelectedItem().toString(), Fila, 6);
            Tabla.setValueAt(txtObs.getText(), Fila, 7);
            Tabla.setValueAt(txtRev.getText(), Fila, 8);

            this.txtCod.setText("");
            this.txtDesc.setText("");
            this.txtMarc.setText("");
            this.txtMod.setText("");
            this.txtSerie.setText("");
            this.txtUbi.setText("");
            this.txtObs.setText("");
            this.txtRev.setText("");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Modificar");
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        Mostrar modi= new Mostrar();
        modi.setVisible(true);
        for(int i=0; i<Tabla.getRowCount(); i++){
            String Datos[]=new String[9];
            Datos[0]=Tabla.getValueAt(i,0).toString();
            Datos[1]=Tabla.getValueAt(i,1).toString();
            Datos[2]=Tabla.getValueAt(i,2).toString();
            Datos[3]=Tabla.getValueAt(i,3).toString();
            Datos[4]=Tabla.getValueAt(i,4).toString();
            Datos[5]=Tabla.getValueAt(i,5).toString();
            Datos[6]=Tabla.getValueAt(i,6).toString();
            Datos[7]=Tabla.getValueAt(i,7).toString();
            Datos[8]=Tabla.getValueAt(i,8).toString();
            
            Mostrar.m3.addRow(Datos);
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    public void openFile(String file){
        try{
            File path=new File(file);
            Desktop.getDesktop().open(path);
        }catch(IOException ioe){
            System.out.println(ioe);   
        }
    }
    
    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        try{
            JFileChooser chooser= new JFileChooser();
            chooser.showSaveDialog(this);
            File saveFile= chooser.getSelectedFile();
            if(saveFile!=null){
                saveFile=new File(saveFile.toString()+".xlsx");
                Workbook w=new XSSFWorkbook();
                Sheet sheet=w.createSheet("Codigo");
                
                Row rowCol = sheet.createRow(0);
                for(int i=0; i<Tabla.getColumnCount(); i++){
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(Tabla.getColumnName(i));
                }
                
                for(int j=0;j<Tabla.getRowCount(); j++){
                    Row row=sheet.createRow(j);
                    for(int k=0; k<Tabla.getColumnCount(); k++){
                        Cell cell= row.createCell(k);
                        if(Tabla.getValueAt(j,k)!=null){
                            cell.setCellValue(Tabla.getValueAt(j,k).toString());
                        }
                    }
                }
                FileOutputStream out= new FileOutputStream(new File(saveFile.toString()));
                w.write(out);
                w.close();
                out.close();
                openFile(saveFile.toString());
                
                JOptionPane.showMessageDialog(null,"Se ha exportado con exito");
            }else{
                JOptionPane.showMessageDialog(null,"Error al generar archivo");
            }
        }catch(FileNotFoundException e){
        }catch(IOException io){
            System.out.println(io);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        int fila=Tabla.getRowCount();
        
        for(int i=fila-1; i>=0;i--){
            m.removeRow(i);
        }
        
        try{
            Tabla.setModel(m);
            
            Conexion conn=new Conexion();
            Connection con= conn.getConexion();
            
            String sql="SELECT codigo,descripcion,marca,modelo,serie,ubicacion,estado,observacion,revision FROM inventario";
            ps=con.prepareStatement(sql);
            rs=ps.executeQuery();
            
            ResultSetMetaData rsMd=rs.getMetaData();
            int cantidadColumn=rsMd.getColumnCount();
            
            
            
            while(rs.next()){
                
                Object[] filas= new Object[cantidadColumn];
                
                for(int i=0; i<cantidadColumn; i++){
                    filas[i]=rs.getObject(i+1);
                }
                
                m.addRow(filas);
            }
            
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String camp=txtBuscar.getText();
        String where="";
        
        int fila=Tabla.getRowCount();
        
        for(int i=fila-1; i>=0;i--){
            m.removeRow(i);
        }
        
        if(!"".equals(camp)){
            where="WHERE codigo='" + camp + "'";
        }
        
        try{
            Tabla.setModel(m);
            
            Conexion conn=new Conexion();
            Connection con= conn.getConexion();
            
            String sql="SELECT codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision FROM inventario " + where;
            System.out.println(sql);
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd=rs.getMetaData();
            int cantidadColumn=rsMd.getColumnCount();
            
            while(rs.next()){
                
                Object[] filas= new Object[cantidadColumn];
                
                for(int i=0; i<cantidadColumn; i++){
                    filas[i]=rs.getObject(i+1);
                }
                
                m.addRow(filas);
            }
            
            txtBuscar.setText("");
            
        }catch(Exception ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();

            int Fila = Tabla.getSelectedRow();
            String codigo = Tabla.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT codigo, descripcion, marca, modelo, serie, ubicacion, observacion, revision FROM inventario WHERE codigo=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCod.setText(rs.getString("codigo"));
                txtDesc.setText(rs.getString("descripcion"));
                txtMarc.setText(rs.getString("marca"));
                txtMod.setText(rs.getString("modelo"));
                txtSerie.setText(rs.getString("serie"));
                txtUbi.setText(rs.getString("ubicacion"));
                txtObs.setText(rs.getString("observacion"));
                txtRev.setText(rs.getString("revision"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_TablaMouseClicked

    private void btnInstruccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInstruccionesActionPerformed
        Instrucciones instru = new Instrucciones();
        instru.setVisible(true);
    }//GEN-LAST:event_btnInstruccionesActionPerformed

    private void TablaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaKeyReleased
        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();

            int Fila = Tabla.getSelectedRow();
            String codigo = Tabla.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT codigo, descripcion, marca, modelo, serie, ubicacion, observacion, revision FROM inventario WHERE codigo=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCod.setText(rs.getString("codigo"));
                txtDesc.setText(rs.getString("descripcion"));
                txtMarc.setText(rs.getString("marca"));
                txtMod.setText(rs.getString("modelo"));
                txtSerie.setText(rs.getString("serie"));
                txtUbi.setText(rs.getString("ubicacion"));
                txtObs.setText(rs.getString("observacion"));
                txtRev.setText(rs.getString("revision"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_TablaKeyReleased

    private void txtRevKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRevKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        if(evt.getKeyCode()==38){
            txtObs.requestFocus();
        }
        else if(evt.getKeyCode()==40){
            txtEst.requestFocus();
        }
    }//GEN-LAST:event_txtRevKeyPressed

    private void txtCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        switch(evt.getKeyCode()){
            case 40:
                txtDesc.requestFocus();
                break;
        }
    }//GEN-LAST:event_txtCodKeyPressed

    private void txtDescKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        if(evt.getKeyCode()==40){
            txtMarc.requestFocus();     
        }else if(evt.getKeyCode()==38){
            txtCod.requestFocus();
        }
    }//GEN-LAST:event_txtDescKeyPressed

    private void txtMarcKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMarcKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        if(evt.getKeyCode()==40){
            txtMod.requestFocus();     
        }else if(evt.getKeyCode()==38){
            txtDesc.requestFocus();
        }
    }//GEN-LAST:event_txtMarcKeyPressed

    private void txtModKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        if(evt.getKeyCode()==40){
            txtSerie.requestFocus();     
        }else if(evt.getKeyCode()==38){
            txtMarc.requestFocus();
        }
    }//GEN-LAST:event_txtModKeyPressed

    private void txtSerieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerieKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        if(evt.getKeyCode()==40){
            txtUbi.requestFocus();     
        }else if(evt.getKeyCode()==38){
            txtMod.requestFocus();
        }
    }//GEN-LAST:event_txtSerieKeyPressed

    private void txtUbiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUbiKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        if(evt.getKeyCode()==40){
            txtObs.requestFocus();     
        }else if(evt.getKeyCode()==38){
            txtSerie.requestFocus();
        }
    }//GEN-LAST:event_txtUbiKeyPressed

    private void txtObsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObsKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        if(evt.getKeyCode()==40){
            txtRev.requestFocus();     
        }else if(evt.getKeyCode()==38){
            txtUbi.requestFocus();
        }
    }//GEN-LAST:event_txtObsKeyPressed

    private void txtEstKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Conexion objCon = new Conexion();
            Connection conn= objCon.getConexion();
        
            try{
                String sql="INSERT INTO inventario(codigo, descripcion, marca, modelo, serie, ubicacion, estado, observacion, revision) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                ps=conn.prepareStatement(sql);
            
                ps.setString(1, txtCod.getText());
                ps.setString(2, txtDesc.getText());
                ps.setString(3, txtMarc.getText());
                ps.setString(4, txtMod.getText());
                ps.setString(5, txtSerie.getText());
                ps.setString(6, txtUbi.getText());
                ps.setString(7, txtEst.getSelectedItem().toString());
                ps.setString(8, txtObs.getText());
                ps.setString(9, txtRev.getText());
            
                int res= ps.executeUpdate();
            
                if(res>0){
                    JOptionPane.showMessageDialog(null,"Guardado con exito");
                }
                else{
                    JOptionPane.showMessageDialog(null,"Error al guardar");
                }
            
                Object[] fila=new Object[9];
                fila[0]=txtCod.getText();
                fila[1]=txtDesc.getText();
                fila[2]=txtMarc.getText();
                fila[3]=txtMod.getText();
                fila[4]=txtSerie.getText();
                fila[5]=txtUbi.getText();
                fila[6]=txtEst.getSelectedItem();
                fila[7]=txtObs.getText();
                fila[8]=txtRev.getText();
            
                m.addRow(fila);
            
                this.txtCod.setText("");
                this.txtDesc.setText("");
                this.txtMarc.setText("");
                this.txtMod.setText("");
                this.txtSerie.setText("");
                this.txtUbi.setText("");
                this.txtObs.setText("");
            
            }catch(Exception ex){
                System.err.println(ex);
            }
        }
        
        if(evt.getKeyCode()==38){
            txtRev.requestFocus();
        }
    }//GEN-LAST:event_txtEstKeyPressed

    private void Menu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu2MouseClicked
        Secundaria s= new Secundaria();
        s.setVisible(true);
    }//GEN-LAST:event_Menu2MouseClicked

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu2;
    public javax.swing.JTable Tabla;
    public javax.swing.JButton btnBuscar;
    public javax.swing.JButton btnCargar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnExport;
    public javax.swing.JButton btnIngresar;
    public javax.swing.JButton btnInstrucciones;
    public javax.swing.JButton btnLimpiar;
    public javax.swing.JButton btnModificar;
    public javax.swing.JButton btnMostrar;
    public javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField txtBuscar;
    public javax.swing.JTextField txtCod;
    public javax.swing.JTextField txtDesc;
    public javax.swing.JComboBox<String> txtEst;
    public javax.swing.JTextField txtMarc;
    public javax.swing.JTextField txtMod;
    public javax.swing.JTextField txtObs;
    public javax.swing.JTextField txtRev;
    public javax.swing.JTextField txtSerie;
    public javax.swing.JTextField txtUbi;
    // End of variables declaration//GEN-END:variables

}
