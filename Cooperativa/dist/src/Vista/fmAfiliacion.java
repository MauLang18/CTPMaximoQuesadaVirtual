/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import static Controlador.Ctrl.fecha;
import Modelo.Conexion;
import Modelo.ConsultasAF;
import Modelo.afiliacion;
import Modelo.usuarios;
import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maula
 */
public class fmAfiliacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmAfiliacion
     */
    afiliacion mod = new afiliacion();
    ConsultasAF modC = new ConsultasAF();
    DefaultTableModel m = new DefaultTableModel();
    
    public fmAfiliacion() {
        initComponents();
        setTitle("Afiliacion");

        this.Datos.setModel(m);
        this.m.addColumn("Cedula");
        this.m.addColumn("Nombre");
        this.m.addColumn("Apellido1");
        this.m.addColumn("Apellido2");
        this.m.addColumn("Nacionalidad");
        this.m.addColumn("Fecha de Nacimiento");
        this.m.addColumn("Enfermedad");
        this.m.addColumn("Correo Electronico");
        this.m.addColumn("Numero de Telefono");
        this.m.addColumn("Direccion");
        this.m.addColumn("Seccion");
        this.m.addColumn("Especialidad/Taller");
        this.m.addColumn("Cedula");
        this.m.addColumn("Beneficiario");
        this.m.addColumn("Apellido1");
        this.m.addColumn("Apellido2");
        this.m.addColumn("Funcionario");
        this.m.addColumn("Funcion/Cargo");
        this.m.addColumn("Fecha de Ingreso");

        try {
            Datos.setModel(m);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT cedula,nombre,apellido1,apellido2,nacionalidad,fechaNaci,enfermedad,correo,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion,fechaIngreso FROM tb_afiliacion";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellido1 = new javax.swing.JTextField();
        txtApellido2 = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtSeccion = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtNacionalidad = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtEnfermedad = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtBeneficiario = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtApellido1b = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtApellido2b = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtCedulab = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtFuncionario = new javax.swing.JTextField();
        txtFuncion = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Datos = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        btnMostrar = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAF/AF.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(51, 60, 135));
        jPanel2.setPreferredSize(new java.awt.Dimension(271, 360));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAF/Afiliacion.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MaxiCoop R.L.");

        jLabel22.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Afiliaciones");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(77, 77, 77))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(114, 114, 114))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel3.setText("Numero");

        txtCedula.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtCedula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCedulaKeyPressed(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel4.setText("Cedula");

        txtApellido1.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido1KeyPressed(evt);
            }
        });

        txtApellido2.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido2KeyPressed(evt);
            }
        });

        txtNumero.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtNumero.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
        });

        txtCorreo.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtCorreo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorreoKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel5.setText("Nombre");

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel6.setText("Apellido1");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel7.setText("Apellido2");

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel8.setText("Correo Electronico");

        txtDireccion.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtDireccion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel9.setText("Direccion");

        txtEspecialidad.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtEspecialidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtEspecialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEspecialidadKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel10.setText("Especialidad/Taller");

        txtSeccion.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtSeccion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtSeccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSeccionKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel11.setText("Seccion");

        txtNacionalidad.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtNacionalidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtNacionalidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNacionalidadKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel13.setText("Nacionalidad");

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel12.setText("Fecha de Nacimiento");

        txtEnfermedad.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtEnfermedad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtEnfermedad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEnfermedadKeyPressed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel14.setText("Enfermedad");

        txtBeneficiario.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtBeneficiario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtBeneficiario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBeneficiarioKeyPressed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel15.setText("Beneficiario");

        txtApellido1b.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido1b.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido1b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido1bKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel16.setText("Apellido1");

        txtApellido2b.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido2b.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido2b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido2bKeyPressed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel17.setText("Apellido2");

        txtCedulab.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtCedulab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCedulab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCedulabKeyPressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel18.setText("Funcionario");

        txtFuncionario.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtFuncionario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtFuncionario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFuncionarioKeyPressed(evt);
            }
        });

        txtFuncion.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtFuncion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtFuncion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFuncionKeyPressed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel20.setText("Funcion/Cargo");

        txtNacimiento.setBackground(new java.awt.Color(255, 255, 255));
        txtNacimiento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtNacimiento.setDateFormatString("yyyy-MM-dd");
        txtNacimiento.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N

        jLabel21.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel21.setText("Cedula");

        Datos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Datos.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DatosMouseClicked(evt);
            }
        });
        Datos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DatosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Datos);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAF/AgregarAF.png"))); // NOI18N
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel19.setText("Nuevo");

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAF/ModificarAF.png"))); // NOI18N
        btnModificar.setBorderPainted(false);
        btnModificar.setContentAreaFilled(false);
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel23.setText("Modificar");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAF/AceptarAF.png"))); // NOI18N
        btnAgregar.setBorderPainted(false);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel24.setText("Eliminar");

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAF/EliminarAF.png"))); // NOI18N
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel25.setText("Agregar");

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAF/MostrarAF.png"))); // NOI18N
        btnMostrar.setBorderPainted(false);
        btnMostrar.setContentAreaFilled(false);
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel26.setText("Mostrar");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAF/BuscarAF.png"))); // NOI18N
        btnBuscar.setBorderPainted(false);
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel27.setText("Buscar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(59, 59, 59)
                                        .addComponent(jLabel8)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(65, 65, 65)
                                        .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10)
                                        .addGap(83, 83, 83))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtSeccion, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(25, 25, 25)
                                                .addComponent(txtNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(jLabel13)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel12)
                                                        .addGap(35, 35, 35)
                                                        .addComponent(jLabel14)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(50, 50, 50)
                                                        .addComponent(txtNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txtEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(6, 6, 6)))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(25, 25, 25)
                                                        .addComponent(txtBeneficiario, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtApellido1b, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel16)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(txtApellido2b, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(txtCedulab, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel17)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel21)))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20)
                                .addGap(49, 49, 49))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel4)
                                .addGap(110, 110, 110)
                                .addComponent(jLabel5)
                                .addGap(90, 90, 90)
                                .addComponent(jLabel6)
                                .addGap(88, 88, 88)
                                .addComponent(jLabel7)
                                .addGap(94, 94, 94)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(btnNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMostrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscar)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(80, 80, 80)
                        .addComponent(jLabel24)
                        .addGap(83, 83, 83)
                        .addComponent(jLabel25)
                        .addGap(91, 91, 91)
                        .addComponent(jLabel26)
                        .addGap(101, 101, 101)
                        .addComponent(jLabel27)
                        .addGap(70, 70, 70))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBeneficiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel18)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel17)
                        .addComponent(jLabel21)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtApellido1b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCedulab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtApellido2b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar)
                    .addComponent(btnNuevo)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar)
                    .addComponent(btnMostrar)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        btnAgregar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        mod.setCedula(Integer.parseInt(txtCedula.getText()));
        mod.setNombre(txtNombre.getText());
        mod.setApellido1(txtApellido1.getText());
        mod.setApellido2(txtApellido2.getText());
        mod.setCorreo(txtCorreo.getText());
        mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
        mod.setTelefono(Integer.parseInt(txtNumero.getText()));
        mod.setDireccion(txtDireccion.getText());
        mod.setSeccion(txtSeccion.getText());
        mod.setEspecialidad(txtEspecialidad.getText());
        mod.setEnfermedad(txtEnfermedad.getText());
        mod.setBeneficiario(txtBeneficiario.getText());
        mod.setApellidoB1(txtApellido1b.getText());
        mod.setApellidoB2(txtApellido2b.getText());
        mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
        mod.setFuncionario(txtFuncionario.getText());
        mod.setCargo(txtFuncion.getText());
        mod.setNacionalidad(txtNacionalidad.getText());
        mod.setFechaIn(fecha());

        if (modC.ingresar(mod)) {
            JOptionPane.showMessageDialog(null, "Ingresado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al ingresar");
            limpiar();
        }

        btnAgregar.setEnabled(false);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        mod.setCedula(Integer.parseInt(txtCedula.getText()));
        mod.setNombre(txtNombre.getText());
        mod.setApellido1(txtApellido1.getText());
        mod.setApellido2(txtApellido2.getText());
        mod.setCorreo(txtCorreo.getText());
        mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
        mod.setTelefono(Integer.parseInt(txtNumero.getText()));
        mod.setDireccion(txtDireccion.getText());
        mod.setSeccion(txtSeccion.getText());
        mod.setEspecialidad(txtEspecialidad.getText());
        mod.setEnfermedad(txtEnfermedad.getText());
        mod.setBeneficiario(txtBeneficiario.getText());
        mod.setApellidoB1(txtApellido1b.getText());
        mod.setApellidoB2(txtApellido2b.getText());
        mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
        mod.setFuncionario(txtFuncionario.getText());
        mod.setCargo(txtFuncion.getText());
        mod.setNacionalidad(txtNacionalidad.getText());

        if (modC.modificar(mod)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnAgregar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void DatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DatosMouseClicked

        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT cedula,nombre,apellido1,apellido2,nacionalidad,enfermedad,correo,fechaNaci,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion FROM tb_afiliacion WHERE cedula=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCedula.setText(rs.getString("cedula"));
                txtNombre.setText(rs.getString("nombre"));
                txtApellido1.setText(rs.getString("apellido1"));
                txtApellido2.setText(rs.getString("apellido2"));
                txtNacionalidad.setText(rs.getString("nacionalidad"));
                txtEnfermedad.setText(rs.getString("enfermedad"));
                txtCorreo.setText(rs.getString("correo"));
                txtNumero.setText(rs.getString("telefono"));
                txtDireccion.setText(rs.getString("direccion"));
                txtSeccion.setText(rs.getString("seccion"));
                txtEspecialidad.setText(rs.getString("especialidad"));
                txtCedulab.setText(rs.getString("cedulab"));
                txtBeneficiario.setText(rs.getString("beneficiario"));
                txtApellido1b.setText(rs.getString("apellido1b"));
                txtApellido2b.setText(rs.getString("apellido2b"));
                txtFuncionario.setText(rs.getString("funcionari"));
                txtFuncion.setText(rs.getString("funcion"));
                txtNacimiento.setDate(rs.getDate("fechaNaci"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosMouseClicked

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed

        int fila = Datos.getRowCount();

        for (int i = fila - 1; i >= 0; i--) {
            m.removeRow(i);
        }

        try {
            Datos.setModel(m);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT cedula,nombre,apellido1,apellido2,nacionalidad,fechaNaci,enfermedad,correo,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion,fechaIngreso FROM tb_afiliacion";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        mod.setCedula(Integer.parseInt(txtCedula.getText()));

        if (modC.eliminar(mod)) {
            JOptionPane.showMessageDialog(null, "Eliminado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar");
            limpiar();
        }

        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnAgregar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        Object bus = JOptionPane.showInputDialog(null, "Seleccione una Opcion", "Buscar", JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Seleccione", "Cedula", "Nombre", "Apellido1", "Apellido2", "Seccion", "Taller/Especialidad"}, "Seleccione");

        if (bus == "Cedula") {
            String ced = JOptionPane.showInputDialog("Ingrese el numero de cedula: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m.removeRow(i);
                }

                Datos.setModel(m);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,nacionalidad,fechaNaci,enfermedad,correo,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion,fechaIngreso FROM tb_afiliacion WHERE cedula= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m.addRow(filas);
                }
            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Nombre") {
            String ced = JOptionPane.showInputDialog("Ingrese el nombre: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m.removeRow(i);
                }

                Datos.setModel(m);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,nacionalidad,fechaNaci,enfermedad,correo,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion,fechaIngreso FROM tb_afiliacion WHERE nombre= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m.addRow(filas);
                }
            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Apellido1") {
            String ced = JOptionPane.showInputDialog("Ingrese el primer apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m.removeRow(i);
                }

                Datos.setModel(m);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,nacionalidad,fechaNaci,enfermedad,correo,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion,fechaIngreso FROM tb_afiliacion WHERE apellido1= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m.addRow(filas);
                }
            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Apellido2") {
            String ced = JOptionPane.showInputDialog("Ingrese el segundo apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m.removeRow(i);
                }

                Datos.setModel(m);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,nacionalidad,fechaNaci,enfermedad,correo,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion,fechaIngreso FROM tb_afiliacion WHERE apellido2= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m.addRow(filas);
                }
            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Seccion") {
            String ced = JOptionPane.showInputDialog("Ingrese la seccion: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m.removeRow(i);
                }

                Datos.setModel(m);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,nacionalidad,fechaNaci,enfermedad,correo,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion,fechaIngreso FROM tb_afiliacion WHERE seccion= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m.addRow(filas);
                }
            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Taller/Especialidad") {
            String ced = JOptionPane.showInputDialog("Ingrese el taller o especialidad: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m.removeRow(i);
                }

                Datos.setModel(m);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT cedula,nombre,apellido1,apellido2,nacionalidad,fechaNaci,enfermedad,correo,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion,fechaIngreso FROM tb_afiliacion WHERE especialidad= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m.addRow(filas);
                }
            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void DatosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatosKeyReleased

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT cedula,nombre,apellido1,apellido2,nacionalidad,enfermedad,correo,fechaNaci,telefono,direccion,seccion,especialidad,cedulab,beneficiario,apellido1b,apellido2b,funcionari,funcion FROM tb_afiliacion WHERE cedula=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCedula.setText(rs.getString("cedula"));
                txtNombre.setText(rs.getString("nombre"));
                txtApellido1.setText(rs.getString("apellido1"));
                txtApellido2.setText(rs.getString("apellido2"));
                txtNacionalidad.setText(rs.getString("nacionalidad"));
                txtEnfermedad.setText(rs.getString("enfermedad"));
                txtCorreo.setText(rs.getString("correo"));
                txtNumero.setText(rs.getString("telefono"));
                txtDireccion.setText(rs.getString("direccion"));
                txtSeccion.setText(rs.getString("seccion"));
                txtEspecialidad.setText(rs.getString("especialidad"));
                txtCedulab.setText(rs.getString("cedulab"));
                txtBeneficiario.setText(rs.getString("beneficiario"));
                txtApellido1b.setText(rs.getString("apellido1b"));
                txtApellido2b.setText(rs.getString("apellido2b"));
                txtFuncionario.setText(rs.getString("funcionari"));
                txtFuncion.setText(rs.getString("funcion"));
                txtNacimiento.setDate(rs.getDate("fechaNaci"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosKeyReleased

    private void txtCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyPressed

        if (evt.getKeyCode() == 40) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtCedulaKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed

        if (evt.getKeyCode() == 40) {
            txtApellido1.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtCedula.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtApellido1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido1KeyPressed

        if (evt.getKeyCode() == 40) {
            txtApellido2.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido1KeyPressed

    private void txtApellido2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido2KeyPressed

        if (evt.getKeyCode() == 40) {
            txtNumero.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido1.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido2KeyPressed

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed

        if (evt.getKeyCode() == 40) {
            txtCorreo.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido2.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtNumeroKeyPressed

    private void txtCorreoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyPressed

        if (evt.getKeyCode() == 40) {
            txtDireccion.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtNumero.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtCorreoKeyPressed

    private void txtDireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyPressed

        if (evt.getKeyCode() == 40) {
            txtEspecialidad.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtCorreo.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtDireccionKeyPressed

    private void txtEspecialidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEspecialidadKeyPressed

        if (evt.getKeyCode() == 40) {
            txtSeccion.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtDireccion.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtEspecialidadKeyPressed

    private void txtSeccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeccionKeyPressed

        if (evt.getKeyCode() == 40) {
            txtNacionalidad.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtEspecialidad.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtSeccionKeyPressed

    private void txtNacionalidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNacionalidadKeyPressed

        if (evt.getKeyCode() == 40) {
            txtEnfermedad.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtSeccion.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtNacionalidadKeyPressed

    private void txtEnfermedadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnfermedadKeyPressed

        if (evt.getKeyCode() == 40) {
            txtBeneficiario.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtNacionalidad.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtEnfermedadKeyPressed

    private void txtBeneficiarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBeneficiarioKeyPressed

        if (evt.getKeyCode() == 40) {
            txtApellido1b.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtEnfermedad.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtBeneficiarioKeyPressed

    private void txtApellido1bKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido1bKeyPressed

        if (evt.getKeyCode() == 40) {
            txtApellido2b.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtBeneficiario.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido1bKeyPressed

    private void txtApellido2bKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido2bKeyPressed

        if (evt.getKeyCode() == 40) {
            txtCedulab.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido1b.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido2bKeyPressed

    private void txtCedulabKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulabKeyPressed

        if (evt.getKeyCode() == 40) {
            txtFuncionario.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido2b.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtCedulabKeyPressed

    private void txtFuncionarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFuncionarioKeyPressed

        if (evt.getKeyCode() == 40) {
            txtFuncion.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtCedulab.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtFuncionarioKeyPressed

    private void txtFuncionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFuncionKeyPressed

        if (evt.getKeyCode() == 38) {
            txtFuncionario.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mod.setCedula(Integer.parseInt(txtCedula.getText()));
            mod.setNombre(txtNombre.getText());
            mod.setApellido1(txtApellido1.getText());
            mod.setApellido2(txtApellido2.getText());
            mod.setCorreo(txtCorreo.getText());
            mod.setNacimiento(((JTextField) txtNacimiento.getDateEditor().getUiComponent()).getText());
            mod.setTelefono(Integer.parseInt(txtNumero.getText()));
            mod.setDireccion(txtDireccion.getText());
            mod.setSeccion(txtSeccion.getText());
            mod.setEspecialidad(txtEspecialidad.getText());
            mod.setEnfermedad(txtEnfermedad.getText());
            mod.setBeneficiario(txtBeneficiario.getText());
            mod.setApellidoB1(txtApellido1b.getText());
            mod.setApellidoB2(txtApellido2b.getText());
            mod.setCedulaB(Integer.parseInt(txtCedulab.getText()));
            mod.setFuncionario(txtFuncionario.getText());
            mod.setCargo(txtFuncion.getText());
            mod.setNacionalidad(txtNacionalidad.getText());
            mod.setFechaIn(fecha());

            if (modC.ingresar(mod)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtFuncionKeyPressed

    public void limpiar() {
        txtCedula.setText(null);
        txtNombre.setText(null);
        txtApellido1.setText(null);
        txtApellido2.setText(null);
        txtCorreo.setText(null);
        txtNacimiento.setDate(null);
        txtNumero.setText(null);
        txtDireccion.setText(null);
        txtSeccion.setText(null);
        txtEspecialidad.setText(null);
        txtEnfermedad.setText(null);
        txtBeneficiario.setText(null);
        txtApellido1b.setText(null);
        txtApellido2b.setText(null);
        txtCedulab.setText(null);
        txtFuncionario.setText(null);
        txtFuncion.setText(null);
        txtNacionalidad.setText(null);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Datos;
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnBuscar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnModificar;
    public javax.swing.JButton btnMostrar;
    public javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField txtApellido1;
    public javax.swing.JTextField txtApellido1b;
    public javax.swing.JTextField txtApellido2;
    public javax.swing.JTextField txtApellido2b;
    public javax.swing.JTextField txtBeneficiario;
    public javax.swing.JTextField txtCedula;
    public javax.swing.JTextField txtCedulab;
    public javax.swing.JTextField txtCorreo;
    public javax.swing.JTextField txtDireccion;
    public javax.swing.JTextField txtEnfermedad;
    public javax.swing.JTextField txtEspecialidad;
    public javax.swing.JTextField txtFuncion;
    public javax.swing.JTextField txtFuncionario;
    public com.toedter.calendar.JDateChooser txtNacimiento;
    public javax.swing.JTextField txtNacionalidad;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtNumero;
    public javax.swing.JTextField txtSeccion;
    // End of variables declaration//GEN-END:variables
}
