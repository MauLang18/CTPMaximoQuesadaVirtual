/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Conexion;
import Modelo.ConsultasAH;
import Modelo.ahorro;
import com.mysql.jdbc.Connection;
import com.toedter.calendar.JDateChooser;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maula
 */
public class fmAhorro extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmAfiliacion
     */
    ahorro ah = new ahorro();
    ConsultasAH ahC = new ConsultasAH();
    DefaultTableModel m3 = new DefaultTableModel();
    public int contDias = 0;
    public Double interes = 0.0;
    public Double tot = 0.0;
    public Double finall = 0.0;

    public fmAhorro() {
        initComponents();
        setTitle("Ahorro");

        this.Datos.setModel(m3);
        this.m3.addColumn("ID");
        this.m3.addColumn("Numero de Asociado");
        this.m3.addColumn("Cedula");
        this.m3.addColumn("Nombre");
        this.m3.addColumn("Apellido1");
        this.m3.addColumn("Apellido2");
        this.m3.addColumn("Fecha de Ingreso");
        this.m3.addColumn("Monto");
        this.m3.addColumn("Fecha de Corte");
        this.m3.addColumn("Total");
        this.m3.addColumn("Monto Final");

        try {
            Datos.setModel(m3);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT id,asociado,cedula,nombr,apel1,apel2,fech,mon,corte,total,final FROM tb_ahorro";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m3.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        btnRetiro = new javax.swing.JButton();
        txtAsociado = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellido1 = new javax.swing.JTextField();
        txtApellido2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Datos = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        btnMostrar = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        txtIngreso = new com.toedter.calendar.JDateChooser();
        txtID = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtCorte = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAH/AH.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(51, 60, 135));
        jPanel2.setPreferredSize(new java.awt.Dimension(271, 360));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAH/Ahorro.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MaxiCoop R.L.");

        jLabel22.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Ahorro");

        btnRetiro.setBackground(new java.awt.Color(255, 255, 255));
        btnRetiro.setText("Retiro");
        btnRetiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetiroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel22)))
                .addGap(0, 102, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(btnRetiro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRetiro)
                .addGap(64, 64, 64))
        );

        txtAsociado.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtAsociado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtAsociado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAsociadoKeyPressed(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel4.setText("Asociado");

        txtApellido1.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido1KeyPressed(evt);
            }
        });

        txtApellido2.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido2KeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel5.setText("Nombre");

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel6.setText("Apellido1");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel7.setText("Apellido2");

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel9.setText("Cedula");

        txtMonto.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtMonto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMontoKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel10.setText("Monto");

        txtTotal.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel11.setText("Total");

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel13.setText("Ingreso");

        Datos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Datos.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DatosMouseClicked(evt);
            }
        });
        Datos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DatosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Datos);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAH/AgregarAH.png"))); // NOI18N
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setHideActionText(true);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel19.setText("Nuevo");

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAH/ModificarAH.png"))); // NOI18N
        btnModificar.setBorderPainted(false);
        btnModificar.setContentAreaFilled(false);
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel23.setText("Modificar");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAH/AceptarAH.png"))); // NOI18N
        btnAgregar.setBorderPainted(false);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel24.setText("Eliminar");

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAH/EliminarAH.png"))); // NOI18N
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel25.setText("Agregar");

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAH/MostrarAH.png"))); // NOI18N
        btnMostrar.setBorderPainted(false);
        btnMostrar.setContentAreaFilled(false);
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel26.setText("Mostrar");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAH/BuscarAH.png"))); // NOI18N
        btnBuscar.setBorderPainted(false);
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel27.setText("Buscar");

        txtIngreso.setBackground(new java.awt.Color(255, 255, 255));
        txtIngreso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtIngreso.setDateFormatString("yyyy-MM-dd");
        txtIngreso.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N

        txtID.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel14.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel14.setText("ID");

        txtCedula.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtCedula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCedulaKeyPressed(evt);
            }
        });

        txtCorte.setBackground(new java.awt.Color(255, 255, 255));
        txtCorte.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCorte.setDateFormatString("yyyy-MM-dd");
        txtCorte.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N

        jLabel16.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel16.setText("Corte");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jLabel19)
                                .addGap(101, 101, 101)
                                .addComponent(jLabel23)
                                .addGap(28, 28, 28))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(btnNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(btnModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMostrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscar)
                                .addContainerGap(47, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel25)
                                .addGap(94, 94, 94)
                                .addComponent(jLabel26)
                                .addGap(95, 95, 95)
                                .addComponent(jLabel27)
                                .addGap(82, 82, 82))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtAsociado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(65, 65, 65)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(65, 65, 65)
                                            .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(65, 65, 65)
                                            .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(12, 12, 12)
                                                    .addComponent(jLabel4)
                                                    .addGap(99, 99, 99)
                                                    .addComponent(jLabel5)
                                                    .addGap(88, 88, 88)
                                                    .addComponent(jLabel6)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel7)
                                                    .addGap(99, 99, 99)))
                                            .addComponent(jLabel9)
                                            .addGap(18, 18, 18))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addGap(41, 41, 41)
                                                            .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(83, 83, 83)
                                                            .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                            .addComponent(txtCorte, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(89, 89, 89)))
                                                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(67, 67, 67)
                                                    .addComponent(jLabel10)
                                                    .addGap(143, 143, 143)
                                                    .addComponent(jLabel13)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel16)
                                                    .addGap(174, 174, 174)
                                                    .addComponent(jLabel11)
                                                    .addGap(21, 21, 21)))
                                            .addGap(23, 23, 23)))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(742, 742, 742)
                                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(434, 434, 434)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(446, 446, 446)
                                .addComponent(jLabel14)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAsociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel11))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCorte, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnNuevo)
                            .addComponent(btnModificar)
                            .addComponent(btnEliminar)
                            .addComponent(btnAgregar)
                            .addComponent(btnMostrar)))
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        btnAgregar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        ah.setNumero(txtAsociado.getText());
        ah.setNombre(txtNombre.getText());
        ah.setApellido1(txtApellido1.getText());
        ah.setApellido2(txtApellido2.getText());
        ah.setCedula(Integer.parseInt(txtCedula.getText()));
        ah.setMonto(Integer.parseInt(txtMonto.getText()));
        ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
        ah.setCorte((((JTextField) txtCorte.getDateEditor().getUiComponent()).getText()));
        calculardias(txtIngreso, txtCorte);
        calcularInteres(txtMonto);
        calcularTotal(interes, txtMonto);
        calcularFinal(tot, txtTotal);
        ah.setTotal(tot);
        ah.setFinaly(Double.parseDouble(txtTotal.getText()));

        if (ahC.ingresar(ah)) {
            JOptionPane.showMessageDialog(null, "Ingresado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al ingresar");
            limpiar();
        }

        if (ahC.finaly(ah)) {
            System.out.println("Funciona awebo");
        } else {
            System.out.println("Me cago en la puta");
        }

        btnAgregar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);

        fmFacturaAH fa = new fmFacturaAH();
        fa.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void DatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DatosMouseClicked

        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT id,asociado,cedula,nombr,apel1,apel2,mon,final,fech,corte FROM tb_ahorro WHERE id=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtID.setText(rs.getString("id"));
                txtAsociado.setText(rs.getString("asociado"));
                txtNombre.setText(rs.getString("nombr"));
                txtApellido1.setText(rs.getString("apel1"));
                txtApellido2.setText(rs.getString("apel2"));
                txtCedula.setText(rs.getString("cedula"));
                txtMonto.setText(rs.getString("mon"));
                txtTotal.setText(rs.getString("final"));
                txtIngreso.setDate(rs.getDate("fech"));
                txtCorte.setDate(rs.getDate("corte"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        ah.setNumero(txtAsociado.getText());
        ah.setNombre(txtNombre.getText());
        ah.setApellido1(txtApellido1.getText());
        ah.setApellido2(txtApellido2.getText());
        ah.setCedula(Integer.parseInt(txtCedula.getText()));
        ah.setMonto(Integer.parseInt(txtMonto.getText()));
        ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
        ah.setID(Integer.parseInt(txtID.getText()));

        if (ahC.modificar(ah)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        btnAgregar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        ah.setID(Integer.parseInt(txtID.getText()));

        if (ahC.eliminar(ah)) {
            JOptionPane.showMessageDialog(null, "Eliminado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar");
            limpiar();
        }

        btnAgregar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed

        int fila = Datos.getRowCount();

        for (int i = fila - 1; i >= 0; i--) {
            m3.removeRow(i);
        }

        try {
            Datos.setModel(m3);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT id,asociado,cedula,nombr,apel1,apel2,fech,mon,corte,total,final FROM tb_ahorro";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m3.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        Object bus = JOptionPane.showInputDialog(null, "Seleccione una Opcion", "Buscar", JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Seleccione", "Numero de Asociado", "Cedula", "Nombre", "Apellido1", "Apellido2"}, "Seleccione");

        if (bus == "Numero de Asociado") {
            String ced = JOptionPane.showInputDialog("Ingrese el numero de asociado: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m3.removeRow(i);
                }
                
                Datos.setModel(m3);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,asociado,cedula,nombr,apel1,apel2,fech,mon,corte,total,final FROM tb_ahorro WHERE asociado= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m3.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Cedula") {
            String ced = JOptionPane.showInputDialog("Ingrese el numero de cedula: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m3.removeRow(i);
                }
                
                Datos.setModel(m3);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,asociado,cedula,nombr,apel1,apel2,fech,mon,corte,total,final FROM tb_ahorro WHERE cedula= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m3.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Nombre") {
            String ced = JOptionPane.showInputDialog("Ingrese el nombre: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m3.removeRow(i);
                }
                
                Datos.setModel(m3);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,asociado,cedula,nombr,apel1,apel2,fech,mon,corte,total,final FROM tb_ahorro WHERE nombr= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m3.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Apellido1") {
            String ced = JOptionPane.showInputDialog("Ingrese el primer apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m3.removeRow(i);
                }
                
                Datos.setModel(m3);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,asociado,cedula,nombr,apel1,apel2,fech,mon,corte,total,final FROM tb_ahorro WHERE apel1= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m3.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Apellido2") {
            String ced = JOptionPane.showInputDialog("Ingrese el segundo apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m3.removeRow(i);
                }
                
                Datos.setModel(m3);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,asociado,cedula,nombr,apel1,apel2,fech,mon,corte,total,final FROM tb_ahorro WHERE apel2= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m3.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void DatosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatosKeyReleased

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT id,asociado,cedula,nombr,apel1,apel2,mon,final,fech,corte FROM tb_ahorro WHERE id=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtID.setText(rs.getString("id"));
                txtAsociado.setText(rs.getString("asociado"));
                txtNombre.setText(rs.getString("nombr"));
                txtApellido1.setText(rs.getString("apel1"));
                txtApellido2.setText(rs.getString("apel2"));
                txtCedula.setText(rs.getString("cedula"));
                txtMonto.setText(rs.getString("mon"));
                txtTotal.setText(rs.getString("final"));
                txtIngreso.setDate(rs.getDate("fech"));
                txtCorte.setDate(rs.getDate("corte"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosKeyReleased

    private void txtAsociadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsociadoKeyPressed

        if (evt.getKeyCode() == 40) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ah.setNumero(txtAsociado.getText());
            ah.setNombre(txtNombre.getText());
            ah.setApellido1(txtApellido1.getText());
            ah.setApellido2(txtApellido2.getText());
            ah.setCedula(Integer.parseInt(txtCedula.getText()));
            ah.setMonto(Integer.parseInt(txtMonto.getText()));
            ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
            ah.setCorte((((JTextField) txtCorte.getDateEditor().getUiComponent()).getText()));
            calculardias(txtIngreso, txtCorte);
            calcularInteres(txtMonto);
            calcularTotal(interes, txtMonto);
            calcularFinal(tot, txtTotal);
            ah.setTotal(tot);
            ah.setFinaly(Double.parseDouble(txtTotal.getText()));

            if (ahC.ingresar(ah)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            if (ahC.finaly(ah)) {
                System.out.println("Funciona");
            } else {
                System.out.println("Fallo");
            }

            btnAgregar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);

            fmFacturaAH fa = new fmFacturaAH();
            fa.setVisible(true);
        }
    }//GEN-LAST:event_txtAsociadoKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        
        if (evt.getKeyCode() == 40) {
            txtApellido1.requestFocus();
        }
        else if(evt.getKeyCode() == 38){
            txtAsociado.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ah.setNumero(txtAsociado.getText());
            ah.setNombre(txtNombre.getText());
            ah.setApellido1(txtApellido1.getText());
            ah.setApellido2(txtApellido2.getText());
            ah.setCedula(Integer.parseInt(txtCedula.getText()));
            ah.setMonto(Integer.parseInt(txtMonto.getText()));
            ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
            ah.setCorte((((JTextField) txtCorte.getDateEditor().getUiComponent()).getText()));
            calculardias(txtIngreso, txtCorte);
            calcularInteres(txtMonto);
            calcularTotal(interes, txtMonto);
            calcularFinal(tot, txtTotal);
            ah.setTotal(tot);
            ah.setFinaly(Double.parseDouble(txtTotal.getText()));

            if (ahC.ingresar(ah)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            if (ahC.finaly(ah)) {
                System.out.println("Funciona awebo");
            } else {
                System.out.println("Me cago en la puta");
            }

            btnAgregar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);

            fmFacturaAH fa = new fmFacturaAH();
            fa.setVisible(true);
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtApellido1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido1KeyPressed
        
        if (evt.getKeyCode() == 40) {
            txtApellido2.requestFocus();
        }
        else if(evt.getKeyCode() == 38){
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ah.setNumero(txtAsociado.getText());
            ah.setNombre(txtNombre.getText());
            ah.setApellido1(txtApellido1.getText());
            ah.setApellido2(txtApellido2.getText());
            ah.setCedula(Integer.parseInt(txtCedula.getText()));
            ah.setMonto(Integer.parseInt(txtMonto.getText()));
            ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
            ah.setCorte((((JTextField) txtCorte.getDateEditor().getUiComponent()).getText()));
            calculardias(txtIngreso, txtCorte);
            calcularInteres(txtMonto);
            calcularTotal(interes, txtMonto);
            calcularFinal(tot, txtTotal);
            ah.setTotal(tot);
            ah.setFinaly(Double.parseDouble(txtTotal.getText()));

            if (ahC.ingresar(ah)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            if (ahC.finaly(ah)) {
                System.out.println("Funciona awebo");
            } else {
                System.out.println("Me cago en la puta");
            }

            btnAgregar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);

            fmFacturaAH fa = new fmFacturaAH();
            fa.setVisible(true);
        }
    }//GEN-LAST:event_txtApellido1KeyPressed

    private void txtApellido2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido2KeyPressed
        
        if (evt.getKeyCode() == 40) {
            txtCedula.requestFocus();
        }
        else if(evt.getKeyCode() == 38){
            txtApellido1.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ah.setNumero(txtAsociado.getText());
            ah.setNombre(txtNombre.getText());
            ah.setApellido1(txtApellido1.getText());
            ah.setApellido2(txtApellido2.getText());
            ah.setCedula(Integer.parseInt(txtCedula.getText()));
            ah.setMonto(Integer.parseInt(txtMonto.getText()));
            ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
            ah.setCorte((((JTextField) txtCorte.getDateEditor().getUiComponent()).getText()));
            calculardias(txtIngreso, txtCorte);
            calcularInteres(txtMonto);
            calcularTotal(interes, txtMonto);
            calcularFinal(tot, txtTotal);
            ah.setTotal(tot);
            ah.setFinaly(Double.parseDouble(txtTotal.getText()));

            if (ahC.ingresar(ah)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            if (ahC.finaly(ah)) {
                System.out.println("Funciona awebo");
            } else {
                System.out.println("Me cago en la puta");
            }

            btnAgregar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);

            fmFacturaAH fa = new fmFacturaAH();
            fa.setVisible(true);
        }
    }//GEN-LAST:event_txtApellido2KeyPressed

    private void txtCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyPressed
        
        if (evt.getKeyCode() == 40) {
            txtMonto.requestFocus();
        }
        else if(evt.getKeyCode() == 38){
            txtApellido2.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ah.setNumero(txtAsociado.getText());
            ah.setNombre(txtNombre.getText());
            ah.setApellido1(txtApellido1.getText());
            ah.setApellido2(txtApellido2.getText());
            ah.setCedula(Integer.parseInt(txtCedula.getText()));
            ah.setMonto(Integer.parseInt(txtMonto.getText()));
            ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
            ah.setCorte((((JTextField) txtCorte.getDateEditor().getUiComponent()).getText()));
            calculardias(txtIngreso, txtCorte);
            calcularInteres(txtMonto);
            calcularTotal(interes, txtMonto);
            calcularFinal(tot, txtTotal);
            ah.setTotal(tot);
            ah.setFinaly(Double.parseDouble(txtTotal.getText()));

            if (ahC.ingresar(ah)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            if (ahC.finaly(ah)) {
                System.out.println("Funciona");
            } else {
                System.out.println("Fallo");
            }

            btnAgregar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);

            fmFacturaAH fa = new fmFacturaAH();
            fa.setVisible(true);
        }
    }//GEN-LAST:event_txtCedulaKeyPressed

    private void txtMontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyPressed
        
        if (evt.getKeyCode() == 40) {
            txtTotal.requestFocus();
        }
        else if(evt.getKeyCode() == 38){
            txtCedula.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ah.setNumero(txtAsociado.getText());
            ah.setNombre(txtNombre.getText());
            ah.setApellido1(txtApellido1.getText());
            ah.setApellido2(txtApellido2.getText());
            ah.setCedula(Integer.parseInt(txtCedula.getText()));
            ah.setMonto(Integer.parseInt(txtMonto.getText()));
            ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
            ah.setCorte((((JTextField) txtCorte.getDateEditor().getUiComponent()).getText()));
            calculardias(txtIngreso, txtCorte);
            calcularInteres(txtMonto);
            calcularTotal(interes, txtMonto);
            calcularFinal(tot, txtTotal);
            ah.setTotal(tot);
            ah.setFinaly(Double.parseDouble(txtTotal.getText()));

            if (ahC.ingresar(ah)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            if (ahC.finaly(ah)) {
                System.out.println("Funciona");
            } else {
                System.out.println("Fallo");
            }

            btnAgregar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);

            fmFacturaAH fa = new fmFacturaAH();
            fa.setVisible(true);
        }
    }//GEN-LAST:event_txtMontoKeyPressed

    private void txtTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyPressed
        
        if(evt.getKeyCode() == 38){
            txtMonto.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ah.setNumero(txtAsociado.getText());
            ah.setNombre(txtNombre.getText());
            ah.setApellido1(txtApellido1.getText());
            ah.setApellido2(txtApellido2.getText());
            ah.setCedula(Integer.parseInt(txtCedula.getText()));
            ah.setMonto(Integer.parseInt(txtMonto.getText()));
            ah.setFecha((((JTextField) txtIngreso.getDateEditor().getUiComponent()).getText()));
            ah.setCorte((((JTextField) txtCorte.getDateEditor().getUiComponent()).getText()));
            calculardias(txtIngreso, txtCorte);
            calcularInteres(txtMonto);
            calcularTotal(interes, txtMonto);
            calcularFinal(tot, txtTotal);
            ah.setTotal(tot);
            ah.setFinaly(Double.parseDouble(txtTotal.getText()));

            if (ahC.ingresar(ah)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            if (ahC.finaly(ah)) {
                System.out.println("Funciona");
            } else {
                System.out.println("Fallo");
            }

            btnAgregar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);

            fmFacturaAH fa = new fmFacturaAH();
            fa.setVisible(true);
        }
    }//GEN-LAST:event_txtTotalKeyPressed

    private void btnRetiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetiroActionPerformed
        
        fmFacturaAH1 fac = new fmFacturaAH1();
        fac.setVisible(true);
    }//GEN-LAST:event_btnRetiroActionPerformed

    public void limpiar() {
        txtApellido1.setText(null);
        txtApellido2.setText(null);
        txtNombre.setText(null);
        txtAsociado.setText(null);
        txtCedula.setText(null);
        txtMonto.setText(null);
        txtIngreso.setDate(null);
        txtCorte.setDate(null);
        txtID.setText(null);
        txtTotal.setText(null);
    }

    public void calculardias(JDateChooser ingreso, JDateChooser cierre) {
        int mes = ingreso.getCalendar().get(Calendar.MARCH);
        int dia = ingreso.getCalendar().get(Calendar.DAY_OF_MONTH);
        int mes2 = cierre.getCalendar().get(Calendar.MARCH);
        int dia2 = cierre.getCalendar().get(Calendar.DAY_OF_MONTH);

        contDias = (mes2 - mes) * 30 + dia2 - dia;

        System.out.println("Dias Contables: " + (contDias));

    }

    public void calcularInteres(JTextField monto) {
        int mon = Integer.parseInt(monto.getText());
        Double p = 0.0;
        Double p1 = 0.0;
        Double total = 0.0;

        p = mon * 0.084;
        p1 = p / 360;
        interes = p1 * contDias;
        total = mon + interes;

        System.out.println("La primera parte es: " + p);
        System.out.println("La segunda parte es: " + p1);
        System.out.println("El interes es de: " + interes);
        System.out.println("El total es: " + total);
    }

    public void calcularTotal(Double interes, JTextField monto) {
        int mon = Integer.parseInt(monto.getText());

        tot = interes + mon;
    }

    public void calcularFinal(Double tot, JTextField fin) {

        finall = Double.parseDouble(fin.getText()) + tot;
        System.out.println("El monto final es " + finall);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Datos;
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnBuscar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnModificar;
    public javax.swing.JButton btnMostrar;
    public javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRetiro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField txtApellido1;
    public javax.swing.JTextField txtApellido2;
    public javax.swing.JTextField txtAsociado;
    public javax.swing.JTextField txtCedula;
    public com.toedter.calendar.JDateChooser txtCorte;
    public javax.swing.JTextField txtID;
    public com.toedter.calendar.JDateChooser txtIngreso;
    public javax.swing.JTextField txtMonto;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
