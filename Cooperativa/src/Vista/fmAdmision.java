/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Conexion;
import Modelo.ConsultasAD;
import Modelo.admision;
import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maula
 */
public class fmAdmision extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmAfiliacion
     */
    admision ad = new admision();
    ConsultasAD adC = new ConsultasAD();
    DefaultTableModel m1 = new DefaultTableModel();

    public fmAdmision() {
        initComponents();
        setTitle("Admision");

        this.Datos.setModel(m1);
        this.m1.addColumn("Numero de Asociado");
        this.m1.addColumn("Cedula");
        this.m1.addColumn("Nombre");
        this.m1.addColumn("Apellido1");
        this.m1.addColumn("Apellido2");
        this.m1.addColumn("Fecha");
        this.m1.addColumn("Calidad");
        this.m1.addColumn("Nivel");
        this.m1.addColumn("Cuota");
        this.m1.addColumn("Estado");
        this.m1.addColumn("Retiro");

        try {
            Datos.setModel(m1);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m1.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellido1 = new javax.swing.JTextField();
        txtApellido2 = new javax.swing.JTextField();
        txtAsociado = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCalidad = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCuota = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNivel = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtFecha = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Datos = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        btnMostrar = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        txtRetiro = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAD/AD.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(51, 60, 135));
        jPanel2.setPreferredSize(new java.awt.Dimension(271, 360));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAD/Admision.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MaxiCoop R.L.");

        jLabel22.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Admision");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(jLabel22)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 102, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel3.setText("Asociado");

        txtCedula.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtCedula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCedulaKeyPressed(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel4.setText("Cedula");

        txtApellido1.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido1KeyPressed(evt);
            }
        });

        txtApellido2.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido2KeyPressed(evt);
            }
        });

        txtAsociado.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtAsociado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtAsociado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAsociadoKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel5.setText("Nombre");

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel6.setText("Apellido1");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel7.setText("Apellido2");

        txtCalidad.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtCalidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCalidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCalidadKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel9.setText("Calidad");

        txtCuota.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtCuota.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCuota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCuotaKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel10.setText("Cuota");

        txtNivel.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtNivel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtNivel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNivelKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel11.setText("Nivel");

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel13.setText("Retiro");

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel12.setText("Fecha");

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel15.setText("Estado");

        txtFecha.setBackground(new java.awt.Color(255, 255, 255));
        txtFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtFecha.setDateFormatString("yyyy-MM-dd");
        txtFecha.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N

        Datos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Datos.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DatosMouseClicked(evt);
            }
        });
        Datos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DatosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Datos);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAD/AgregarAD.png"))); // NOI18N
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setHideActionText(true);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel19.setText("Nuevo");

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAD/ModificarAD.png"))); // NOI18N
        btnModificar.setBorderPainted(false);
        btnModificar.setContentAreaFilled(false);
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel23.setText("Modificar");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAD/AgregarAD.png"))); // NOI18N
        btnAgregar.setBorderPainted(false);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel24.setText("Eliminar");

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAD/EliminarAD.png"))); // NOI18N
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel25.setText("Agregar");

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAD/MostrarAD.png"))); // NOI18N
        btnMostrar.setBorderPainted(false);
        btnMostrar.setContentAreaFilled(false);
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel26.setText("Mostrar");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAD/BuscarAD.png"))); // NOI18N
        btnBuscar.setBorderPainted(false);
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel27.setText("Buscar");

        txtEstado.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtEstado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstadoKeyPressed(evt);
            }
        });

        txtRetiro.setBackground(new java.awt.Color(255, 255, 255));
        txtRetiro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtRetiro.setDateFormatString("yyyy-MM-dd");
        txtRetiro.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMostrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel4)
                        .addGap(110, 110, 110)
                        .addComponent(jLabel5)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel6)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel7)
                        .addGap(84, 84, 84)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(jLabel12)))
                                .addGap(65, 65, 65)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(65, 65, 65)
                                        .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(txtAsociado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel11))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(461, 461, 461)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCuota, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(jLabel15)
                                        .addGap(87, 87, 87)
                                        .addComponent(jLabel13))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addComponent(txtRetiro, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(txtCalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(txtNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel19)
                        .addGap(86, 86, 86)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel24)
                        .addGap(97, 97, 97)
                        .addComponent(jLabel25)
                        .addGap(94, 94, 94)
                        .addComponent(jLabel26)
                        .addGap(96, 96, 96)
                        .addComponent(jLabel27)
                        .addGap(46, 46, 46))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAsociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCuota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtRetiro, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar)
                    .addComponent(btnNuevo)
                    .addComponent(btnEliminar)
                    .addComponent(btnAgregar)
                    .addComponent(btnMostrar)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jLabel19))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        btnAgregar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        ad.setNumero(txtAsociado.getText());
        ad.setNombre(txtNombre.getText());
        ad.setApellido1(txtApellido1.getText());
        ad.setApellido2(txtApellido2.getText());
        ad.setCedula(Integer.parseInt(txtCedula.getText()));
        ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
        ad.setCalidad(txtCalidad.getText());
        ad.setNivel(txtNivel.getText());
        ad.setCuota(Integer.parseInt(txtCuota.getText()));
        ad.setEstado(txtEstado.getText());
        ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

        if (adC.ingresar(ad)) {
            JOptionPane.showMessageDialog(null, "Ingresado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al ingresar");
            limpiar();
        }

        btnAgregar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed

        int fila = Datos.getRowCount();

        for (int i = fila - 1; i >= 0; i--) {
            m1.removeRow(i);
        }

        try {
            Datos.setModel(m1);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m1.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void DatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DatosMouseClicked

        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT numero,ced,nom,ap1,ap2,calidad,nivel,cuota,estado,fecha,retiro FROM tb_asociados WHERE numero=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtAsociado.setText(rs.getString("numero"));
                txtCedula.setText(rs.getString("ced"));
                txtNombre.setText(rs.getString("nom"));
                txtFecha.setDate(rs.getDate("fecha"));
                txtRetiro.setDate(rs.getDate("retiro"));
                txtApellido1.setText(rs.getString("ap1"));
                txtApellido2.setText(rs.getString("ap2"));
                txtCalidad.setText(rs.getString("calidad"));
                txtNivel.setText(rs.getString("nivel"));
                txtCuota.setText(rs.getString("cuota"));
                txtEstado.setText(rs.getString("estado"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosMouseClicked

    private void DatosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatosKeyReleased

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT numero,ced,nom,ap1,ap2,calidad,nivel,cuota,estado,fecha,retiro FROM tb_asociados WHERE numero=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtAsociado.setText(rs.getString("numero"));
                txtCedula.setText(rs.getString("ced"));
                txtNombre.setText(rs.getString("nom"));
                txtApellido1.setText(rs.getString("ap1"));
                txtApellido2.setText(rs.getString("ap2"));
                txtFecha.setDate(rs.getDate("fecha"));
                txtRetiro.setDate(rs.getDate("retiro"));
                txtCalidad.setText(rs.getString("calidad"));
                txtNivel.setText(rs.getString("nivel"));
                txtCuota.setText(rs.getString("cuota"));
                txtEstado.setText(rs.getString("estado"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosKeyReleased

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        ad.setNumero(txtAsociado.getText());
        ad.setNombre(txtNombre.getText());
        ad.setApellido1(txtApellido1.getText());
        ad.setApellido2(txtApellido2.getText());
        ad.setCedula(Integer.parseInt(txtCedula.getText()));
        ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
        ad.setCalidad(txtCalidad.getText());
        ad.setNivel(txtNivel.getText());
        ad.setCuota(Integer.parseInt(txtCuota.getText()));
        ad.setEstado(txtEstado.getText());
        ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

        if (adC.modificar(ad)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        btnAgregar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        Object bus = JOptionPane.showInputDialog(null, "Seleccione una Opcion", "Buscar", JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Seleccione", "Numero de Asociado", "Cedula", "Nombre", "Apellido1", "Apellido2", "Nivel", "Calidad", "Estado"}, "Seleccione");

        if (bus == "Numero de Asociado") {
            String ced = JOptionPane.showInputDialog("Ingrese el numero de asociado: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m1.removeRow(i);
                }

                Datos.setModel(m1);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados WHERE numero= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m1.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Cedula") {
            String ced = JOptionPane.showInputDialog("Ingrese el numero de cedula: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m1.removeRow(i);
                }

                Datos.setModel(m1);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados WHERE ced= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m1.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Nombre") {
            String ced = JOptionPane.showInputDialog("Ingrese el nombre: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m1.removeRow(i);
                }

                Datos.setModel(m1);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados WHERE nom= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m1.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Apellido1") {
            String ced = JOptionPane.showInputDialog("Ingrese el primer apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m1.removeRow(i);
                }

                Datos.setModel(m1);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados WHERE ap1= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m1.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Apellido2") {
            String ced = JOptionPane.showInputDialog("Ingrese el segundo apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m1.removeRow(i);
                }

                Datos.setModel(m1);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados WHERE ap2= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m1.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Nivel") {
            String ced = JOptionPane.showInputDialog("Ingrese el nivel: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m1.removeRow(i);
                }

                Datos.setModel(m1);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados WHERE nivel= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m1.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Estado") {
            String ced = JOptionPane.showInputDialog("Ingrese el estado: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m1.removeRow(i);
                }

                Datos.setModel(m1);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados WHERE estado= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m1.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
        else if (bus == "Calidad") {
            String ced = JOptionPane.showInputDialog("Ingrese la calidad: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m1.removeRow(i);
                }

                Datos.setModel(m1);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT numero,ced,nom,ap1,ap2,fecha,calidad,nivel,cuota,estado,retiro FROM tb_asociados WHERE calidad= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m1.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        ad.setNumero(txtAsociado.getText());

        if (adC.eliminar(ad)) {
            JOptionPane.showMessageDialog(null, "Eliminado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar");
            limpiar();
        }

        btnAgregar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyPressed

        if (evt.getKeyCode() == 40) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtCedulaKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed

        if (evt.getKeyCode() == 40) {
            txtApellido1.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtCedula.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtApellido1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido1KeyPressed

        if (evt.getKeyCode() == 40) {
            txtApellido2.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido1KeyPressed

    private void txtApellido2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido2KeyPressed

        if (evt.getKeyCode() == 40) {
            txtAsociado.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido1.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido2KeyPressed

    private void txtAsociadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsociadoKeyPressed

        if (evt.getKeyCode() == 40) {
            txtCalidad.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido2.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtAsociadoKeyPressed

    private void txtCalidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalidadKeyPressed

        if (evt.getKeyCode() == 40) {
            txtNivel.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtAsociado.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtCalidadKeyPressed

    private void txtNivelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNivelKeyPressed

        if (evt.getKeyCode() == 40) {
            txtCuota.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtCalidad.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtNivelKeyPressed

    private void txtCuotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCuotaKeyPressed

        if (evt.getKeyCode() == 40) {
            txtEstado.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtNivel.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtCuotaKeyPressed

    private void txtEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoKeyPressed

        if (evt.getKeyCode() == 38) {
            txtCuota.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ad.setNumero(txtAsociado.getText());
            ad.setNombre(txtNombre.getText());
            ad.setApellido1(txtApellido1.getText());
            ad.setApellido2(txtApellido2.getText());
            ad.setCedula(Integer.parseInt(txtCedula.getText()));
            ad.setFecha(((JTextField) txtFecha.getDateEditor().getUiComponent()).getText());
            ad.setCalidad(txtCalidad.getText());
            ad.setNivel(txtNivel.getText());
            ad.setCuota(Integer.parseInt(txtCuota.getText()));
            ad.setEstado(txtEstado.getText());
            ad.setRetiro((((JTextField) txtRetiro.getDateEditor().getUiComponent()).getText()));

            if (adC.ingresar(ad)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtEstadoKeyPressed

    public void limpiar() {
        txtAsociado.setText(null);
        txtNombre.setText(null);
        txtApellido1.setText(null);
        txtApellido2.setText(null);
        txtCedula.setText(null);
        txtFecha.setDate(null);
        txtCalidad.setText(null);
        txtNivel.setText(null);
        txtCuota.setText(null);
        txtEstado.setText(null);
        txtRetiro.setDate(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Datos;
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnBuscar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnModificar;
    public javax.swing.JButton btnMostrar;
    public javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField txtApellido1;
    public javax.swing.JTextField txtApellido2;
    public javax.swing.JTextField txtAsociado;
    public javax.swing.JTextField txtCalidad;
    public javax.swing.JTextField txtCedula;
    public javax.swing.JTextField txtCuota;
    public javax.swing.JTextField txtEstado;
    public com.toedter.calendar.JDateChooser txtFecha;
    public javax.swing.JTextField txtNivel;
    public javax.swing.JTextField txtNombre;
    public com.toedter.calendar.JDateChooser txtRetiro;
    // End of variables declaration//GEN-END:variables
}
