/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Conexion;
import Modelo.ConsultasAP;
import Modelo.aportacion;
import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maula
 */
public class fmAportacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmAfiliacion
     */
    aportacion ap = new aportacion();
    ConsultasAP apC = new ConsultasAP();
    DefaultTableModel m2 = new DefaultTableModel();

    public fmAportacion() {
        initComponents();
        setTitle("Aportacion");

        this.Datos.setModel(m2);
        this.m2.addColumn("ID");
        this.m2.addColumn("Numero de Asociado");
        this.m2.addColumn("Nombre");
        this.m2.addColumn("Apellido1");
        this.m2.addColumn("Apellido2");
        this.m2.addColumn("Acumulado");
        this.m2.addColumn("Año");
        this.m2.addColumn("Mes");
        this.m2.addColumn("Fecha");
        this.m2.addColumn("Monto");
        this.m2.addColumn("Recibo");
        this.m2.addColumn("Numero de Certificados");
        this.m2.addColumn("Total");

        try {
            Datos.setModel(m2);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT id,num,nomb,ape1,ape2,acumulada,año,mes,fec,monto1,recibo,certificados,tot FROM tb_aportacion";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m2.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAsociado = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellido1 = new javax.swing.JTextField();
        txtApellido2 = new javax.swing.JTextField();
        txtAcumulado = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCertificados = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Datos = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        btnMostrar = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        txtRecibo = new javax.swing.JTextField();
        txtFecha = new com.toedter.calendar.JDateChooser();
        txtMes = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAP/AP.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setEnabled(false);

        jPanel2.setBackground(new java.awt.Color(51, 60, 135));
        jPanel2.setPreferredSize(new java.awt.Dimension(271, 360));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAP/Aportacion.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MaxiCoop R.L.");

        jLabel22.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Aportacion");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel22)))
                .addGap(0, 102, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel3.setText("Acumulado");

        txtAsociado.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtAsociado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtAsociado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAsociadoKeyPressed(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel4.setText("Asociado");

        txtApellido1.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido1KeyPressed(evt);
            }
        });

        txtApellido2.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtApellido2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtApellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellido2KeyPressed(evt);
            }
        });

        txtAcumulado.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtAcumulado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtAcumulado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAcumuladoKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel5.setText("Nombre");

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel6.setText("Apellido1");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel7.setText("Apellido2");

        txtYear.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtYear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtYearKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel9.setText("Año");

        txtMonto.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtMonto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMontoKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel10.setText("Monto");

        txtCertificados.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtCertificados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCertificados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCertificadosKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel11.setText("Certificados");

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel13.setText("Fecha");

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel15.setText("Recibo");

        Datos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Datos.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DatosMouseClicked(evt);
            }
        });
        Datos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DatosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Datos);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAP/AgregarAP.png"))); // NOI18N
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setHideActionText(true);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel19.setText("Nuevo");

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAP/ModificarAP.png"))); // NOI18N
        btnModificar.setBorderPainted(false);
        btnModificar.setContentAreaFilled(false);
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel23.setText("Modificar");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAP/AceptarAP.png"))); // NOI18N
        btnAgregar.setBorderPainted(false);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel24.setText("Eliminar");

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAP/EliminarAP.png"))); // NOI18N
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel25.setText("Agregar");

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAP/MostrarAP.png"))); // NOI18N
        btnMostrar.setBorderPainted(false);
        btnMostrar.setContentAreaFilled(false);
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel26.setText("Mostrar");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgAP/BuscarAP.png"))); // NOI18N
        btnBuscar.setBorderPainted(false);
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel27.setText("Buscar");

        txtRecibo.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtRecibo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtRecibo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtReciboKeyPressed(evt);
            }
        });

        txtFecha.setBackground(new java.awt.Color(255, 255, 255));
        txtFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtFecha.setDateFormatString("yyyy-MM-dd");
        txtFecha.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N

        txtMes.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        txtMes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel12.setText("Mes");

        txtID.setFont(new java.awt.Font("SansSerif", 0, 21)); // NOI18N
        txtID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel14.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel14.setText("ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtAsociado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(65, 65, 65)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(65, 65, 65)
                                            .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(65, 65, 65))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(12, 12, 12)
                                                    .addComponent(jLabel9)
                                                    .addGap(105, 105, 105)
                                                    .addComponent(jLabel12)
                                                    .addGap(87, 87, 87)
                                                    .addComponent(jLabel11))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addGap(45, 45, 45)
                                                            .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addGap(244, 244, 244)
                                                            .addComponent(txtCertificados, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addGap(34, 34, 34)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10))
                                            .addGap(39, 39, 39)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(65, 65, 65)
                                            .addComponent(txtAcumulado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(42, 42, 42)
                                                    .addComponent(txtRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(28, 28, 28)
                                                    .addComponent(jLabel15)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel13)
                                                    .addGap(45, 45, 45))
                                                .addComponent(txtFecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(13, 13, 13)
                                    .addComponent(jLabel4)
                                    .addGap(95, 95, 95)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6)
                                    .addGap(85, 85, 85)
                                    .addComponent(jLabel7)
                                    .addGap(75, 75, 75)
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(btnNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMostrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(444, 444, 444)
                                .addComponent(jLabel14))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(430, 430, 430)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel24)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel25)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel26)
                        .addGap(94, 94, 94)
                        .addComponent(jLabel27)
                        .addGap(59, 59, 59))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAsociado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAcumulado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCertificados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModificar)
                            .addComponent(btnNuevo)
                            .addComponent(btnEliminar)
                            .addComponent(btnAgregar)
                            .addComponent(btnMostrar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel25)
                            .addComponent(jLabel24)
                            .addComponent(jLabel23)
                            .addComponent(jLabel19)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)))
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        btnAgregar.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        int tot;
        tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

        ap.setNumero(txtAsociado.getText());
        ap.setNombre(txtNombre.getText());
        ap.setApellido1(txtApellido1.getText());
        ap.setApellido2(txtApellido2.getText());
        ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
        ap.setMes(txtMes.getSelectedItem().toString());
        ap.setMonto(Integer.parseInt(txtMonto.getText()));
        ap.setRecibo(txtRecibo.getText());
        ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
        ap.setCertificados(txtCertificados.getText());
        ap.setYear(txtYear.getText());
        ap.setTotal(tot);

        if (apC.ingresar(ap)) {
            JOptionPane.showMessageDialog(null, "Ingresado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al ingresar");
            limpiar();
        }

        btnAgregar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void DatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DatosMouseClicked

        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT id,num,nomb,ape1,ape2,acumulada,año,monto1,recibo,certificados,fec FROM tb_aportacion WHERE id=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtID.setText(rs.getString("id"));
                txtAsociado.setText(rs.getString("num"));
                txtNombre.setText(rs.getString("nomb"));
                txtApellido1.setText(rs.getString("ape1"));
                txtApellido2.setText(rs.getString("ape2"));
                txtAcumulado.setText(rs.getString("acumulada"));
                txtYear.setText(rs.getString("año"));
                txtMonto.setText(rs.getString("monto1"));
                txtRecibo.setText(rs.getString("recibo"));
                txtCertificados.setText(rs.getString("certificados"));
                txtFecha.setDate(rs.getDate("fec"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        ap.setNumero(txtAsociado.getText());
        ap.setNombre(txtNombre.getText());
        ap.setApellido1(txtApellido1.getText());
        ap.setApellido2(txtApellido2.getText());
        ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
        ap.setMes(txtMes.getSelectedItem().toString());
        ap.setMonto(Integer.parseInt(txtMonto.getText()));
        ap.setRecibo(txtRecibo.getText());
        ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
        ap.setCertificados(txtCertificados.getText());
        ap.setYear(txtYear.getText());
        ap.setID(Integer.parseInt(txtID.getText()));

        if (apC.modificar(ap)) {
            JOptionPane.showMessageDialog(null, "Modificado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al modificar");
            limpiar();
        }

        int a = ap.getMonto();

        if (a > 0) {
            System.out.println(a + " es positivo");
            System.out.println("Se sumo " + a);
            apC.suma(ap);
        } else if (a < 0) {
            System.out.println(a + " es negativo");
            System.out.println("Se resto " + a);
            apC.resta(ap);
        } else if (a == 0) {
            System.out.println("Es 0");
        }

        btnAgregar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        ap.setNumero(txtID.getText());

        if (apC.eliminar(ap)) {
            JOptionPane.showMessageDialog(null, "Eliminado con exito");
            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar");
            limpiar();
        }

        btnAgregar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed

        int fila = Datos.getRowCount();

        for (int i = fila - 1; i >= 0; i--) {
            m2.removeRow(i);
        }

        try {
            Datos.setModel(m2);

            Conexion conn = new Conexion();
            Connection con = conn.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String sql = "SELECT id,num,nomb,ape1,ape2,acumulada,año,mes,fec,monto1,recibo,certificados,tot FROM tb_aportacion";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumn = rsMd.getColumnCount();

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumn];

                for (int i = 0; i < cantidadColumn; i++) {
                    filas[i] = rs.getObject(i + 1);
                }

                m2.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        Object bus = JOptionPane.showInputDialog(null, "Seleccione una Opcion", "Buscar", JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Seleccione", "Numero de Asociado", "Nombre", "Apellido1", "Apellido2"}, "Seleccione");

        if (bus == "Numero de Asociado") {
            String ced = JOptionPane.showInputDialog("Ingrese el numero de asociado: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m2.removeRow(i);
                }
                
                Datos.setModel(m2);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,num,nomb,ape1,ape2,acumulada,año,mes,fec,monto1,recibo,certificados,tot FROM tb_aportacion WHERE num= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m2.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Nombre") {
            String ced = JOptionPane.showInputDialog("Ingrese el nombre: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m2.removeRow(i);
                }
                
                Datos.setModel(m2);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,num,nomb,ape1,ape2,acumulada,año,mes,fec,monto1,recibo,certificados,tot FROM tb_aportacion WHERE nomb= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m2.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Apellido1") {
            String ced = JOptionPane.showInputDialog("Ingrese el primer apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m2.removeRow(i);
                }
                
                Datos.setModel(m2);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,num,nomb,ape1,ape2,acumulada,año,mes,fec,monto1,recibo,certificados,tot FROM tb_aportacion WHERE ape1= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m2.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        } else if (bus == "Apellido2") {
            String ced = JOptionPane.showInputDialog("Ingrese el segundo apellido: ");

            try {
                int fila = Datos.getRowCount();

                for (int i = fila - 1; i >= 0; i--) {
                    m2.removeRow(i);
                }

                Datos.setModel(m2);

                Conexion conn = new Conexion();
                Connection con = conn.getConexion();

                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT id,num,nomb,ape1,ape2,acumulada,año,mes,fec,monto1,recibo,certificados,tot FROM tb_aportacion WHERE ape2= '" + ced + "'";
                System.out.println(sql);
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();

                ResultSetMetaData rsMd = rs.getMetaData();
                int cantidadColumn = rsMd.getColumnCount();

                while (rs.next()) {

                    Object[] filas = new Object[cantidadColumn];

                    for (int i = 0; i < cantidadColumn; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }

                    m2.addRow(filas);
                }

            } catch (Exception ex) {
                System.err.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void DatosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatosKeyReleased

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            int Fila = Datos.getSelectedRow();
            String codigo = Datos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT id,num,nomb,ape1,ape2,acumulada,año,monto1,recibo,certificados,fec FROM tb_aportacion WHERE id=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtID.setText(rs.getString("id"));
                txtAsociado.setText(rs.getString("num"));
                txtNombre.setText(rs.getString("nomb"));
                txtApellido1.setText(rs.getString("ape1"));
                txtApellido2.setText(rs.getString("ape2"));
                txtAcumulado.setText(rs.getString("acumulada"));
                txtYear.setText(rs.getString("año"));
                txtMonto.setText(rs.getString("monto1"));
                txtRecibo.setText(rs.getString("recibo"));
                txtCertificados.setText(rs.getString("certificados"));
                txtFecha.setDate(rs.getDate("fec"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_DatosKeyReleased

    private void txtAsociadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsociadoKeyPressed

        if (evt.getKeyCode() == 40) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtAsociadoKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed

        if (evt.getKeyCode() == 40) {
            txtApellido1.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtAsociado.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtApellido1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido1KeyPressed

        if (evt.getKeyCode() == 40) {
            txtApellido2.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtNombre.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido1KeyPressed

    private void txtApellido2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellido2KeyPressed

        if (evt.getKeyCode() == 40) {
            txtAcumulado.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido1.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtApellido2KeyPressed

    private void txtAcumuladoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAcumuladoKeyPressed

        if (evt.getKeyCode() == 40) {
            txtYear.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtApellido2.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtAcumuladoKeyPressed

    private void txtYearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyPressed

        if (evt.getKeyCode() == 40) {
            txtCertificados.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtAcumulado.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtYearKeyPressed

    private void txtCertificadosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCertificadosKeyPressed

        if (evt.getKeyCode() == 40) {
            txtMonto.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtYear.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtCertificadosKeyPressed

    private void txtMontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyPressed

        if (evt.getKeyCode() == 40) {
            txtRecibo.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            txtCertificados.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtMontoKeyPressed

    private void txtReciboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReciboKeyPressed

        if (evt.getKeyCode() == 38) {
            txtMonto.requestFocus();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int tot;
            tot = Integer.parseInt(txtAcumulado.getText()) + Integer.parseInt(txtMonto.getText());

            ap.setNumero(txtAsociado.getText());
            ap.setNombre(txtNombre.getText());
            ap.setApellido1(txtApellido1.getText());
            ap.setApellido2(txtApellido2.getText());
            ap.setAcumulacion(Integer.parseInt(txtAcumulado.getText()));
            ap.setMes(txtMes.getSelectedItem().toString());
            ap.setMonto(Integer.parseInt(txtMonto.getText()));
            ap.setRecibo(txtRecibo.getText());
            ap.setFecha((((JTextField) txtFecha.getDateEditor().getUiComponent()).getText()));
            ap.setCertificados(txtCertificados.getText());
            ap.setYear(txtYear.getText());
            ap.setTotal(tot);

            if (apC.ingresar(ap)) {
                JOptionPane.showMessageDialog(null, "Ingresado con exito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al ingresar");
                limpiar();
            }

            btnAgregar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
    }//GEN-LAST:event_txtReciboKeyPressed

    public void limpiar() {
        txtAsociado.setText(null);
        txtNombre.setText(null);
        txtApellido1.setText(null);
        txtApellido2.setText(null);
        txtAcumulado.setText(null);
        txtCertificados.setText(null);
        txtMonto.setText(null);
        txtRecibo.setText(null);
        txtFecha.setDate(null);
        txtYear.setText(null);
        txtID.setText(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Datos;
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnBuscar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnModificar;
    public javax.swing.JButton btnMostrar;
    public javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField txtAcumulado;
    public javax.swing.JTextField txtApellido1;
    public javax.swing.JTextField txtApellido2;
    public javax.swing.JTextField txtAsociado;
    public javax.swing.JTextField txtCertificados;
    public com.toedter.calendar.JDateChooser txtFecha;
    public javax.swing.JTextField txtID;
    public javax.swing.JComboBox txtMes;
    public javax.swing.JTextField txtMonto;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtRecibo;
    public javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
